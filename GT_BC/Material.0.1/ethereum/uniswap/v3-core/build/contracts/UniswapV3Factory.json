{
  "contractName": "UniswapV3Factory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "indexed": true,
          "internalType": "int24",
          "name": "tickSpacing",
          "type": "int24"
        }
      ],
      "name": "FeeAmountEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tickSpacing",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "name": "feeAmountTickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "parameters",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "int24",
          "name": "tickSpacing",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "int24",
          "name": "tickSpacing",
          "type": "int24"
        }
      ],
      "name": "enableFeeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"stateVariables\":{\"feeAmountTickSpacing\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"return\":\"The tick spacing\"},\"getPool\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"return\":\"pool The pool address\"},\"owner\":{\"details\":\"Can be changed by the current owner via setOwner\",\"return\":\"The address of the factory owner\"}},\"title\":\"Canonical Uniswap V3 factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"parameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/UniswapV3Factory.sol\":\"UniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2},\"remappings\":[]},\"sources\":{\"project:/contracts/NoDelegateCall.sol\":{\"keccak256\":\"0xc12ceb98dc803a7d745d7e7c53175b4c5b7781dd26e6f5d233deecd8b0d0d1dc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://224378ae3c96adfb81f0c827e2a5a8b51e3bb51c6fc4a82e79f14720b42d719f\",\"dweb:/ipfs/QmapcnEvVdCoLqp4CUYmg8tuc6ui1u6fg8gt7YoCVvgZyC\"]},\"project:/contracts/UniswapV3Factory.sol\":{\"keccak256\":\"0x21ededbd11cc02a0bc6e59ea3cae107bc21c2c7af9ee8231f4a75dc0eccdf3e0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://666df69cfc6357e055e51d0acc5f582b189386f0899bab00428a3e997e681c81\",\"dweb:/ipfs/QmX26st1PcMKKtTwtzc2ppcMoL61WDfWdbVWL2BU6ZPZVF\"]},\"project:/contracts/UniswapV3Pool.sol\":{\"keccak256\":\"0x9c9de173b1401976e47a62b4049a51ee97d4928b5d2fb571c7f40fc464276bcf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://903f6b89e69c93d78b98b84f4c08da61c7fb3418718cd746f89aea26ee28073e\",\"dweb:/ipfs/QmPheq4vLYeyx1mNhMmc28asHWoTGk7bbVSxyjJjGRychh\"]},\"project:/contracts/UniswapV3PoolDeployer.sol\":{\"keccak256\":\"0xcdfd1b71791c0225c41e8c7896651bdd50dfb6b9ffbd12dc675fbd1e34c22cd5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://40dc6a30b744297b2dfc6013b2bbeb21a7f11deef2bb200d82f590d3d3d1cf9a\",\"dweb:/ipfs/QmNuYCoS4Wh6SDCguRhn36wmBYj5AxFStHu1hzVnj33uR1\"]},\"project:/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3\",\"dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF\"]},\"project:/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"project:/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"project:/contracts/interfaces/IUniswapV3PoolDeployer.sol\":{\"keccak256\":\"0x4661803343659fa8a05c4db910f00065087e41cf18707a81ae4c9df6bfedb9ea\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://788ba2bbe5c43e9a30d335304d16b69ea4cde92b997b8db5e961a5d567aaac3b\",\"dweb:/ipfs/QmTjRuZiVUmsAwbge9jTQbc3B4dJt6XuS65j7jZjB1gviu\"]},\"project:/contracts/interfaces/callback/IUniswapV3FlashCallback.sol\":{\"keccak256\":\"0x151ba1777392771025f0fca946c95fbc16ec4b5eff05e1f236115b99bd574de2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://738a50c25d9d26ca3fabb1865bf6a0cdd8d7a2eec9dbfbd1fc000c81fb8e2b5e\",\"dweb:/ipfs/QmQjgCiLhrq5eLJgQcVHV24MRHyf6YdVzrGH8Ms7LnSSRA\"]},\"project:/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7\",\"dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp\"]},\"project:/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"project:/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"project:/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"project:/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"project:/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"project:/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"project:/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"project:/contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"project:/contracts/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"project:/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"project:/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]},\"project:/contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd53041349718d5bce4a89e87cd911879d41ba42ba3fab0614e5e8b742f352b88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea7529b99ab4fc1d3e6c5a31990fb688f0a2d6cc302c0419e0cf5a2d6c563781\",\"dweb:/ipfs/QmVaphRSNpfChHZKzutQ9WprwCo2WE1euvThRfHcwsnHhj\"]},\"project:/contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"project:/contracts/libraries/Oracle.sol\":{\"keccak256\":\"0x82799a37c6b962a506550fd7149fcf1346d007c7bf7496d08eab1e2081185398\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b584d193084495237dbf77fca81bd6099bff83364e73cb9866bd3c805ca887f2\",\"dweb:/ipfs/QmQsbUm87Vzh6HaUTLxztpfkYZEhjt6WsoQgdMW8heVCHn\"]},\"project:/contracts/libraries/Position.sol\":{\"keccak256\":\"0xb6dc6f49bf6a2e8c7bfd4b6e77a040dd2de7836e3f2885b14c45ce02969283e0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://37b405f9547b6871ba2cbf5cfd3dc81c3faca6f79898e45946b66928d708f1e2\",\"dweb:/ipfs/QmdVr7VrusjBFVEBmvupyR3BxuTjswTncr1N3axYsbFwQX\"]},\"project:/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869\",\"dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU\"]},\"project:/contracts/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0x4f69701d331d364b69a1cda77cd7b983a0079d36ae0e06b0bb1d64ae56c3705e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f9ed4f172da650484c97d31cce084e905e69c3f3b072141cb15363f4ed0cd03c\",\"dweb:/ipfs/QmPNDM667PxzbbR8YDbtibFaPMGrcbK71GKpFPkGgDEYvb\"]},\"project:/contracts/libraries/SwapMath.sol\":{\"keccak256\":\"0xcd310be830646d0d55bef86683847577f742704d227471ad7b4cab3df9c47cf7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e6029f7cbb62563f488ee9c4510fee69b5408b64119065d912c1bd682baeef84\",\"dweb:/ipfs/Qmed5zZvcEbqmDmkyGV2huNzrK3mk8KrF9UQohKWLTcc3n\"]},\"project:/contracts/libraries/Tick.sol\":{\"keccak256\":\"0x473bf9fd987161de1ecf215190db4c94b50eb12ea9ebafecbc7acef1bcd79dee\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e3e948f35862db5adeaffdb1f7072b51bc570041920e6593da61262eb0ac4817\",\"dweb:/ipfs/QmUDYpKSzSaFyDiC8AQx3RTzex3bu1W1g53itPyEJZkC1L\"]},\"project:/contracts/libraries/TickBitmap.sol\":{\"keccak256\":\"0x2035bacd76333baa4ef2bbd6423561638e1b7e97cb19be5b4d61feeea3340364\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://55da2e8d44c094b9aa1a40577f9ff32605516ae45ad54e799ec9d570d007a206\",\"dweb:/ipfs/QmakgjThKgfBTaj6Vvf54oKkxeHqgxKFmyiVbcjstsGDBF\"]},\"project:/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"project:/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3f66e0d24a6bfb74a62a667c7229c65add3075375ef77d8eb2f929994bd4ab3e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e1f9dcb71c151c5cd17f7733139100a4a5befb4f1f05e9085e905d0a32276c17\",\"dweb:/ipfs/QmNZBS1kh2y92bKufQbxxfpVRC1aAJDJD5B8qjmFyhuwMq\"]},\"project:/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503060601b608052600380546001600160a01b031916339081179091556040516000907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c908290a36101f4600081815260046020527ffb8cf1d12598d1a039dd1d106665851a96aadf67d0d9ed76fceea282119208b7805462ffffff1916600a908117909155604051909291600080516020615fce83398151915291a3610bb8600081815260046020527f72dffa9b822156d9cf4b0090fa0b656bcb9cc2b2c60eb6acfc20a34f54b31743805462ffffff1916603c908117909155604051909291600080516020615fce83398151915291a3612710600081815260046020527f8cc740d51daa94ff54f33bd779c2d20149f524c340519b49181be5a08615f829805462ffffff191660c8908117909155604051909291600080516020615fce83398151915291a360805160601c615e5a610174600039806104725250615e5a6000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c806313af4035146100725780631698ee821461008757806322afcccb146100b057806389035730146100d05780638a7c195f146100e95780638da5cb5b146100fc578063a167129514610104575b600080fd5b610085610080366004610608565b610117565b005b61009a610095366004610629565b61018a565b6040516100a791906106c0565b60405180910390f35b6100c36100be36600461066b565b6101b6565b6040516100a7919061070f565b6100d86101cb565b6040516100a79594939291906106d4565b6100856100f7366004610685565b610201565b61009a6102c4565b61009a610112366004610629565b6102d3565b6003546001600160a01b0316331461012e57600080fd5b6003546040516001600160a01b038084169216907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c90600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b60056020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b60046020526000908152604090205460020b81565b600054600154600280546001600160a01b03938416939283169281169162ffffff600160a01b83041691600160b81b9004900b85565b6003546001600160a01b0316331461021857600080fd5b620f42408262ffffff161061022c57600080fd5b60008160020b13801561024357506140008160020b125b61024c57600080fd5b62ffffff8216600090815260046020526040902054600290810b900b1561027257600080fd5b62ffffff828116600081815260046020526040808220805462ffffff1916600287900b958616179055517fc66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc9190a35050565b6003546001600160a01b031681565b60006102dd610467565b826001600160a01b0316846001600160a01b031614156102fc57600080fd5b600080846001600160a01b0316866001600160a01b03161061031f578486610322565b85855b90925090506001600160a01b03821661033a57600080fd5b62ffffff8416600090815260046020526040902054600290810b9081900b61036157600080fd5b6001600160a01b0383811660009081526005602090815260408083208685168452825280832062ffffff8a16845290915290205416156103a057600080fd5b6103ad308484888561049e565b6001600160a01b03808516600081815260056020818152604080842089871680865290835281852062ffffff8e168087529084528286208054988a166001600160a01b0319998a16811790915582875294845282862087875284528286208187529093529381902080549096169092179094555193975091927f783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118906104559086908a9061071d565b60405180910390a45050509392505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461049c57600080fd5b565b6040805160a0810182526001600160a01b03878116808352878216602080850182905292881684860181905262ffffff888116606080880182905260028a810b6080998a01819052600080546001600160a01b03199081169099178155600180548a16891790558254909816861762ffffff60a01b1916600160a01b85021762ffffff60b81b1916600160b81b91830b9095160293909317909255875180870194909452838801929092528281019190915285518083039091018152930193849052825192909101919091209091610575906105cc565b8190604051809103906000f5905080158015610595573d6000803e3d6000fd5b50600080546001600160a01b0319908116909155600180549091169055600280546001600160d01b03191690559695505050505050565b6156eb8061073a83390190565b80356001600160a01b03811681146105f057600080fd5b919050565b803562ffffff811681146105f057600080fd5b600060208284031215610619578081fd5b610622826105d9565b9392505050565b60008060006060848603121561063d578182fd5b610646846105d9565b9250610654602085016105d9565b9150610662604085016105f5565b90509250925092565b60006020828403121561067c578081fd5b610622826105f5565b60008060408385031215610697578182fd5b6106a0836105f5565b915060208301358060020b81146106b5578182fd5b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b039586168152938516602085015291909316604083015262ffffff909216606082015260029190910b608082015260a00190565b60029190910b815260200190565b60029290920b82526001600160a01b031660208201526040019056fe6101606040523480156200001257600080fd5b503060601b60805260408051630890357360e41b81529051600091339163890357309160048082019260a092909190829003018186803b1580156200005657600080fd5b505afa1580156200006b573d6000803e3d6000fd5b505050506040513d60a08110156200008257600080fd5b508051602080830151604084015160608086015160809096015160e896871b6001600160e81b0319166101005291811b6001600160601b031990811660e05292811b831660c0529390931b1660a052600282810b900b90921b610120529150620000f79082906200010f811b62002a8b17901c565b60801b6001600160801b03191661014052506200017d565b60008082600281900b620d89e719816200012557fe5b05029050600083600281900b620d89e8816200013d57fe5b0502905060008460020b83830360020b816200015557fe5b0560010190508062ffffff166001600160801b038016816200017357fe5b0495945050505050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160e81c6101205160e81c6101405160801c6154a16200024a60003980611f5b52806149a052806149d7525080610b8852806128475280614a0b5280614a3d525080610c775280611938528061196f528061288f52508061113552806119f25280611e615280612396528061286b5280613cdc52508061085a528061126352806119c15280611dfb52806123105280613b93525080611fe852806121cf5280612823525080612b0252506154a16000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c80630dfe168114610143578063128acb08146101675780631a686502146102145780631ad8b03b14610238578063252c09d71461026f57806332148f67146102c65780633850c7bd146102e95780633c8a7d8d1461034257806346141319146103e2578063490e6cbc146103fc5780634f1eb3d814610486578063514ea4bf146104d75780635339c2961461053057806370cf754a146105505780638206a4d11461055857806385b6672914610580578063883bdbfd146105bd578063a34123a7146106c4578063a38807f2146106fe578063c45a015514610759578063d0c93a7c14610761578063d21220a714610780578063ddca3f4314610788578063f3058399146107a8578063f30dba93146107b0578063f637731d14610832575b600080fd5b61014b610858565b604080516001600160a01b039092168252519081900360200190f35b6101fb600480360360a081101561017d57600080fd5b6001600160a01b0382358116926020810135151592604082013592606083013516919081019060a081016080820135600160201b8111156101bd57600080fd5b8201836020820111156101cf57600080fd5b803590602001918460018302840111600160201b831117156101f057600080fd5b50909250905061087c565b6040805192835260208301919091528051918290030190f35b61021c61141b565b604080516001600160801b039092168252519081900360200190f35b61024061142a565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b61028c6004803603602081101561028557600080fd5b5035611444565b6040805163ffffffff909516855260069390930b60208501526001600160a01b039091168383015215156060830152519081900360800190f35b6102e7600480360360208110156102dc57600080fd5b503561ffff16611489565b005b6102f1611583565b604080516001600160a01b03909816885260029690960b602088015261ffff9485168787015292841660608701529216608085015260ff90911660a0840152151560c0830152519081900360e00190f35b6101fb600480360360a081101561035857600080fd5b6001600160a01b03823516916020810135600290810b92604083013590910b916001600160801b036060820135169181019060a081016080820135600160201b8111156103a457600080fd5b8201836020820111156103b657600080fd5b803590602001918460018302840111600160201b831117156103d757600080fd5b5090925090506115d3565b6103ea61188f565b60408051918252519081900360200190f35b6102e76004803603608081101561041257600080fd5b6001600160a01b038235169160208101359160408201359190810190608081016060820135600160201b81111561044857600080fd5b82018360208201111561045a57600080fd5b803590602001918460018302840111600160201b8311171561047b57600080fd5b509092509050611895565b610240600480360360a081101561049c57600080fd5b506001600160a01b03813516906020810135600290810b91604081013590910b906001600160801b0360608201358116916080013516611cf0565b6104f4600480360360208110156104ed57600080fd5b5035611f0a565b604080516001600160801b0396871681526020810195909552848101939093529084166060840152909216608082015290519081900360a00190f35b6103ea6004803603602081101561054657600080fd5b503560010b611f47565b61021c611f59565b6102e76004803603604081101561056e57600080fd5b5060ff81358116916020013516611f7d565b6102406004803603606081101561059657600080fd5b506001600160a01b03813516906001600160801b0360208201358116916040013516612161565b61062b600480360360208110156105d357600080fd5b810190602081018135600160201b8111156105ed57600080fd5b8201836020820111156105ff57600080fd5b803590602001918460208302840111600160201b8311171561062057600080fd5b50909250905061242e565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561066f578181015183820152602001610657565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156106ae578181015183820152602001610696565b5050505090500194505050505060405180910390f35b6101fb600480360360608110156106da57600080fd5b508035600290810b91602081013590910b90604001356001600160801b03166124bb565b6107286004803603604081101561071457600080fd5b508035600290810b9160200135900b612632565b6040805160069490940b84526001600160a01b03909216602084015263ffffffff1682820152519081900360600190f35b61014b612821565b610769612845565b6040805160029290920b8252519081900360200190f35b61014b612869565b61079061288d565b6040805162ffffff9092168252519081900360200190f35b6103ea6128b1565b6107d0600480360360208110156107c657600080fd5b503560020b6128b7565b604080516001600160801b039099168952600f9790970b602089015287870195909552606087019390935260069190910b60808601526001600160a01b031660a085015263ffffffff1660c0840152151560e083015251908190036101000190f35b6102e76004803603602081101561084857600080fd5b50356001600160a01b0316612921565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610887612af7565b856108be576040805162461bcd60e51b8152602060048201526002602482015261415360f01b604482015290519081900360640190fd5b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602083015261ffff600160b81b8204811693830193909352600160c81b810483166060830152600160d81b8104909216608082015260ff600160e81b8304811660a0830152600160f01b909204909116151560c08201819052610977576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b876109c25780600001516001600160a01b0316866001600160a01b03161180156109bd575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b6109f4565b80600001516001600160a01b0316866001600160a01b03161080156109f457506401000276a36001600160a01b038716115b610a2b576040805162461bcd60e51b815260206004820152600360248201526214d41360ea1b604482015290519081900360640190fd5b6000805460ff60f01b191681556040805160c08101909152808a610a5a5760048460a0015160ff16901c610a6d565b60108460a0015160ff1681610a6b57fe5b065b60ff1681526004546001600160801b03166020820152604001610a8e612b2e565b63ffffffff168152602001600060060b815260200160006001600160a01b031681526020016000151581525090506000808913905060006040518060e001604052808b81526020016000815260200185600001516001600160a01b03168152602001856020015160020b81526020018c610b0a57600254610b0e565b6001545b815260200160006001600160801b0316815260200184602001516001600160801b031681525090505b805115801590610b5d5750886001600160a01b031681604001516001600160a01b031614155b15610f2757610b6a615408565b60408201516001600160a01b031681526060820151610bad906006907f00000000000000000000000000000000000000000000000000000000000000008f612b32565b15156040830152600290810b810b60208301819052620d89e719910b1215610bde57620d89e7196020820152610bfd565b6020810151620d89e860029190910b1315610bfd57620d89e860208201525b610c0a8160200151612c74565b6001600160a01b031660608201526040820151610c9b908d610c44578b6001600160a01b031683606001516001600160a01b031611610c5e565b8b6001600160a01b031683606001516001600160a01b0316105b610c6c578260600151610c6e565b8b5b60c085015185517f0000000000000000000000000000000000000000000000000000000000000000612f9b565b60c085015260a084015260808301526001600160a01b031660408301528215610cfd57610cd18160c0015182608001510161318d565b825103825260a0810151610cf390610ce89061318d565b6020840151906131a3565b6020830152610d38565b610d0a8160a0015161318d565b825101825260c08101516080820151610d3291610d27910161318d565b6020840151906131bf565b60208301525b835160ff1615610d7e576000846000015160ff168260c0015181610d5857fe5b60c0840180519290910491829003905260a0840180519091016001600160801b03169052505b60c08201516001600160801b031615610dbd57610db18160c00151600160801b8460c001516001600160801b03166131d5565b60808301805190910190525b80606001516001600160a01b031682604001516001600160a01b03161415610ee657806040015115610ebd578360a00151610e4757610e25846040015160008760200151886040015188602001518a606001516008613285909695949392919063ffffffff16565b6001600160a01b03166080860152600690810b900b6060850152600160a08501525b6000610e9382602001518e610e5e57600154610e64565b84608001515b8f610e73578560800151610e77565b6002545b608089015160608a015160408b01516005959493929190613417565b90508c15610e9f576000035b610ead8360c00151826134d1565b6001600160801b031660c0840152505b8b610ecc578060200151610ed5565b60018160200151035b600290810b900b6060830152610f21565b80600001516001600160a01b031682604001516001600160a01b031614610f2157610f148260400151613587565b600290810b900b60608301525b50610b37565b836020015160020b816060015160020b14610ff557600080610f7586604001518660400151886020015188602001518a606001518b608001516008613872909695949392919063ffffffff16565b604085015160608601516000805461ffff60c81b1916600160c81b61ffff958616021761ffff60b81b1916600160b81b95909416949094029290921762ffffff60a01b1916600160a01b62ffffff60029490940b9390931692909202919091176001600160a01b0319166001600160a01b039091161790555061101a9050565b6040810151600080546001600160a01b0319166001600160a01b039092169190911790555b8060c001516001600160801b031683602001516001600160801b0316146110605760c0810151600480546001600160801b0319166001600160801b039092169190911790555b8a156110b057608081015160015560a08101516001600160801b0316156110ab5760a0810151600380546001600160801b031981166001600160801b03918216909301169190911790555b6110f6565b608081015160025560a08101516001600160801b0316156110f65760a0810151600380546001600160801b03808216600160801b92839004821690940116029190911790555b8115158b15151461110f57602081015181518b0361111c565b80600001518a0381602001515b90965094508a1561125557600085121561115e5761115e7f00000000000000000000000000000000000000000000000000000000000000008d876000036139f7565b6000611168613b45565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b1580156111ec57600080fd5b505af1158015611200573d6000803e3d6000fd5b5050505061120c613b45565b6112168289613c7e565b111561124f576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b5061137f565b600086121561128c5761128c7f00000000000000000000000000000000000000000000000000000000000000008d886000036139f7565b6000611296613c8e565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561131a57600080fd5b505af115801561132e573d6000803e3d6000fd5b5050505061133a613c8e565b6113448288613c7e565b111561137d576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b505b60408082015160c083015160608085015184518b8152602081018b90526001600160a01b03948516818701526001600160801b039093169183019190915260020b60808201529151908e169133917fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca679181900360a00190a350506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b6004546001600160801b031681565b6003546001600160801b0380821691600160801b90041682565b60088161ffff811061145557600080fd5b015463ffffffff81169150600160201b810460060b90600160581b81046001600160a01b031690600160f81b900460ff1684565b600054600160f01b900460ff166114cd576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556114e2612af7565b60008054600160d81b900461ffff16906114fe60088385613d26565b6000805461ffff808416600160d81b810261ffff60d81b199093169290921790925591925083161461156b576040805161ffff80851682528316602082015281517fac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a929181900390910190a15b50506000805460ff60f01b1916600160f01b17905550565b6000546001600160a01b03811690600160a01b810460020b9061ffff600160b81b8204811691600160c81b8104821691600160d81b8204169060ff600160e81b8204811691600160f01b90041687565b600080548190600160f01b900460ff1661161a576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556001600160801b03851661163a57600080fd5b60008061168860405180608001604052808c6001600160a01b031681526020018b60020b81526020018a60020b815260200161167e8a6001600160801b0316613dc9565b600f0b9052613dda565b925092505081935080925060008060008611156116aa576116a7613b45565b91505b84156116bb576116b8613c8e565b90505b336001600160a01b031663d348799787878b8b6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561173d57600080fd5b505af1158015611751573d6000803e3d6000fd5b5050505060008611156117a857611766613b45565b6117708388613c7e565b11156117a8576040805162461bcd60e51b815260206004820152600260248201526104d360f41b604482015290519081900360640190fd5b84156117f8576117b6613c8e565b6117c08287613c7e565b11156117f8576040805162461bcd60e51b81526020600482015260026024820152614d3160f01b604482015290519081900360640190fd5b8960020b8b60020b8d6001600160a01b03167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338d8b8b60405180856001600160a01b03168152602001846001600160801b0316815260200183815260200182815260200194505050505060405180910390a450506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b60025481565b600054600160f01b900460ff166118d9576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556118ee612af7565b6004546001600160801b031680611930576040805162461bcd60e51b81526020600482015260016024820152601360fa1b604482015290519081900360640190fd5b6000611965867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f424061401a565b9050600061199c867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f424061401a565b905060006119a8613b45565b905060006119b4613c8e565b905088156119e7576119e77f00000000000000000000000000000000000000000000000000000000000000008b8b6139f7565b8715611a1857611a187f00000000000000000000000000000000000000000000000000000000000000008b8a6139f7565b336001600160a01b031663e9cbafb085858a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b158015611a9a57600080fd5b505af1158015611aae573d6000803e3d6000fd5b505050506000611abc613b45565b90506000611ac8613c8e565b905081611ad58588613c7e565b1115611b0d576040805162461bcd60e51b8152602060048201526002602482015261046360f41b604482015290519081900360640190fd5b80611b188487613c7e565b1115611b50576040805162461bcd60e51b8152602060048201526002602482015261463160f01b604482015290519081900360640190fd5b8382038382038115611bdf5760008054600160e81b9004600f16908115611b83578160ff168481611b7d57fe5b04611b86565b60005b90506001600160801b03811615611bb957600380546001600160801b038082168401166001600160801b03199091161790555b611bd3818503600160801b8d6001600160801b03166131d5565b60018054909101905550505b8015611c6a5760008054600160e81b900460041c600f16908115611c0f578160ff168381611c0957fe5b04611c12565b60005b90506001600160801b03811615611c4457600380546001600160801b03600160801b8083048216850182160291161790555b611c5e818403600160801b8d6001600160801b03166131d5565b60028054909101905550505b8d6001600160a01b0316336001600160a01b03167fbdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca6338f8f86866040518085815260200184815260200183815260200182815260200194505050505060405180910390a350506000805460ff60f01b1916600160f01b179055505050505050505050505050565b600080548190600160f01b900460ff16611d37576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19168155611d516007338989614054565b60038101549091506001600160801b0390811690861611611d725784611d81565b60038101546001600160801b03165b60038201549093506001600160801b03600160801b909104811690851611611da95783611dbf565b6003810154600160801b90046001600160801b03165b91506001600160801b03831615611e24576003810180546001600160801b031981166001600160801b03918216869003821617909155611e24907f0000000000000000000000000000000000000000000000000000000000000000908a9086166139f7565b6001600160801b03821615611e8a576003810180546001600160801b03600160801b808304821686900382160291811691909117909155611e8a907f0000000000000000000000000000000000000000000000000000000000000000908a9085166139f7565b604080516001600160a01b038a1681526001600160801b0380861660208301528416818301529051600288810b92908a900b9133917f70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0919081900360600190a4506000805460ff60f01b1916600160f01b17905590969095509350505050565b60076020526000908152604090208054600182015460028301546003909301546001600160801b0392831693919281811691600160801b90041685565b60066020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160f01b900460ff16611fc1576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561202e57600080fd5b505afa158015612042573d6000803e3d6000fd5b505050506040513d602081101561205857600080fd5b50516001600160a01b0316331461206e57600080fd5b60ff82161580612091575060048260ff16101580156120915750600a8260ff1611155b80156120bb575060ff811615806120bb575060048160ff16101580156120bb5750600a8160ff1611155b6120c457600080fd5b60008054610ff0600484901b16840160ff908116600160e81b90810260ff60e81b19841617909355919004167f973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b1336010826040805160ff9390920683168252600f600486901c16602083015286831682820152918516606082015290519081900360800190a150506000805460ff60f01b1916600160f01b17905550565b600080548190600160f01b900460ff166121a8576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561221557600080fd5b505afa158015612229573d6000803e3d6000fd5b505050506040513d602081101561223f57600080fd5b50516001600160a01b0316331461225557600080fd5b6003546001600160801b0390811690851611612271578361227e565b6003546001600160801b03165b6003549092506001600160801b03600160801b9091048116908416116122a457826122b8565b600354600160801b90046001600160801b03165b90506001600160801b03821615612339576003546001600160801b03838116911614156122e757600019909101905b600380546001600160801b031981166001600160801b03918216859003821617909155612339907f000000000000000000000000000000000000000000000000000000000000000090879085166139f7565b6001600160801b038116156123bf576003546001600160801b03828116600160801b90920416141561236a57600019015b600380546001600160801b03600160801b8083048216859003821602918116919091179091556123bf907f000000000000000000000000000000000000000000000000000000000000000090879084166139f7565b604080516001600160801b0380851682528316602082015281516001600160a01b0388169233927f596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151929081900390910190a36000805460ff60f01b1916600160f01b1790559094909350915050565b606080612439612af7565b6124b0612444612b2e565b858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054600454600896959450600160a01b820460020b935061ffff600160b81b8304811693506001600160801b0390911691600160c81b9004166140b3565b915091509250929050565b600080548190600160f01b900460ff16612502576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916815560408051608081018252338152600288810b602083015287900b918101919091528190819061255b906060810161254e6001600160801b038a16613dc9565b600003600f0b9052613dda565b925092509250816000039450806000039350600085118061257c5750600084115b156125bb576003830180546001600160801b038082168089018216600160801b93849004831689019092169092029091176001600160801b0319161790555b604080516001600160801b0388168152602081018790528082018690529051600289810b92908b900b9133917f0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c919081900360600190a450506000805460ff60f01b1916600160f01b179055509094909350915050565b600080600061263f612af7565b612649858561420b565b600285810b810b60009081526005602052604080822087840b90930b825281206003830154600681900b93600160381b82046001600160a01b0316928492600160d81b810463ffffffff169284929091600160f81b900460ff16806126ad57600080fd5b6003820154600681900b9850600160381b81046001600160a01b03169650600160d81b810463ffffffff169450600160f81b900460ff16806126ee57600080fd5b50506040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b810b6020840181905261ffff600160b81b8404811695850195909552600160c81b830485166060850152600160d81b8304909416608084015260ff600160e81b8304811660a0850152600160f01b909204909116151560c08301529093508e810b91900b121590506127975750939094039650900393509003905061281a565b8a60020b816020015160020b121561280b5760006127b3612b2e565b60208301516040840151600454606086015193945060009384936127e9936008938893879392916001600160801b031690613285565b9a9003989098039b50509490960392909203965090910303925061281a915050565b50949093039650039350900390505b9250925092565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60056020526000908152604090208054600182015460028301546003909301546001600160801b03831693600160801b909304600f0b9290600681900b90600160381b81046001600160a01b031690600160d81b810463ffffffff1690600160f81b900460ff1688565b6000546001600160a01b031615612964576040805162461bcd60e51b8152602060048201526002602482015261414960f01b604482015290519081900360640190fd5b600061296f82613587565b905060008061298761297f612b2e565b6008906142d4565b6040805160e0810182526001600160a01b038816808252600288810b6020808501829052600085870181905261ffff898116606088018190529089166080880181905260a08801839052600160c0909801979097528154600160f01b6001600160a01b0319909116871762ffffff60a01b1916600160a01b62ffffff9787900b97909716969096029590951763ffffffff60b81b1916600160c81b9091021761ffff60d81b1916600160d81b9096029590951761ffff60e81b191692909217909355835191825281019190915281519395509193507f98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c9592918290030190a150505050565b60008082600281900b620d89e71981612aa057fe5b05029050600083600281900b620d89e881612ab757fe5b0502905060008460020b83830360020b81612ace57fe5b0560010190508062ffffff166001600160801b03801681612aeb57fe5b0493505050505b919050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612b2c57600080fd5b565b4290565b60008060008460020b8660020b81612b4657fe5b05905060008660020b128015612b6d57508460020b8660020b81612b6657fe5b0760020b15155b15612b7757600019015b8315612bec57600080612b8983614320565b600182810b810b600090815260208d9052604090205460ff83169190911b80016000190190811680151597509294509092509085612bce57888360ff16860302612be1565b88612bd882614332565b840360ff168603025b965050505050612c6a565b600080612bfb83600101614320565b91509150600060018260ff166001901b031990506000818b60008660010b60010b8152602001908152602001600020541690508060001415955085612c4d57888360ff0360ff16866001010102612c63565b8883612c58836143cc565b0360ff168660010101025b9650505050505b5094509492505050565b60008060008360020b12612c8b578260020b612c93565b8260020b6000035b9050620d89e8811115612cd1576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216612ce557600160801b612cf7565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b031690506002821615612d21576ffff97272373d413259a46990580e213a0260801c5b6004821615612d40576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612d5f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612d7e576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612d9d576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612dbc576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612ddb576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612dfb576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612e1b576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612e3b576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612e5b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612e7b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612e9b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612ebb576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612edb576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612efc576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612f1c576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612f3b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612f58576b048a170391f7dc42444e8fa20260801c5b60008460020b1315612f73578060001981612f6f57fe5b0490505b600160201b810615612f86576001612f89565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a161015818712801590613020576000612fd48989620f42400362ffffff16620f42406131d5565b905082612fed57612fe88c8c8c60016144b5565b612ffa565b612ffa8b8d8c6001614530565b955085811061300b578a965061301a565b6130178c8b83866145db565b96505b5061306a565b81613037576130328b8b8b6000614530565b613044565b6130448a8c8b60006144b5565b93508388600003106130585789955061306a565b6130678b8a8a60000385614627565b95505b6001600160a01b038a81169087161482156130cd578080156130895750815b61309f5761309a878d8c6001614530565b6130a1565b855b95508080156130ae575081155b6130c4576130bf878d8c60006144b5565b6130c6565b845b9450613117565b8080156130d75750815b6130ed576130e88c888c60016144b5565b6130ef565b855b95508080156130fc575081155b6131125761310d8c888c6000614530565b613114565b845b94505b8115801561312757508860000385115b15613133578860000394505b81801561315257508a6001600160a01b0316876001600160a01b031614155b1561316157858903935061317e565b61317b868962ffffff168a620f42400362ffffff1661401a565b93505b50505095509550955095915050565b6000600160ff1b821061319f57600080fd5b5090565b808203828113156000831215146131b957600080fd5b92915050565b818101828112156000831215146131b957600080fd5b600080806000198587098686029250828110908390030390508061320b576000841161320057600080fd5b50829004905061327e565b80841161321757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008063ffffffff871661332b576000898661ffff1661ffff81106132a657fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff16151560608301529092508a161461331757613314818a8988614673565b90505b80602001518160400151925092505061340b565b8688036000806133408c8c858c8c8c8c614716565b91509150816000015163ffffffff168363ffffffff16141561337257816020015182604001519450945050505061340b565b805163ffffffff8481169116141561339a57806020015181604001519450945050505061340b565b8151815160208085015190840151918390039286039163ffffffff80841692908516910360060b816133c857fe5b05028460200151018263ffffffff168263ffffffff1686604001518660400151036001600160a01b031602816133fa57fe5b048560400151019650965050505050505b97509795505050505050565b600295860b860b60009081526020979097526040909620600181018054909503909455938301805490920390915560038201805463ffffffff600160d81b6001600160a01b03600160381b808504821690960316909402600160381b600160d81b031990921691909117600681810b90960390950b66ffffffffffffff1666ffffffffffffff199095169490941782810485169095039093160263ffffffff60d81b1990931692909217905554600160801b9004600f0b90565b60008082600f0b121561353657826001600160801b03168260000384039150816001600160801b031610613531576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b6131b9565b826001600160801b03168284019150816001600160801b031610156131b9576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b038316108015906135c3575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b6135f8576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b600160201b600160c01b03602083901b166001600160801b03811160071b81811c6001600160401b03811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c9790881196179094179092171790911717176080811061368a57607f810383901c9150613694565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c6001603f1b161760c19b909b1c6001603e1b169a909a1760c29990991c6001603d1b169890981760c39790971c6001603c1b169690961760c49590951c6001603b1b169490941760c59390931c6001603a1b169290921760c69190911c600160391b161760c79190911c600160381b161760c89190911c600160371b161760c99190911c600160361b161760ca9190911c600160351b161760cb9190911c600160341b161760cc9190911c600160331b161760cd9190911c600160321b1617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b1461386357886001600160a01b031661384782612c74565b6001600160a01b0316111561385c578161385e565b805b613865565b815b9998505050505050505050565b6000806000898961ffff1661ffff811061388857fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff1615156060830152909250891614156138f7578885925092505061340b565b8461ffff168461ffff1611801561391857506001850361ffff168961ffff16145b1561392557839150613929565b8491505b8161ffff168960010161ffff168161393d57fe5b06925061394c81898989614673565b8a8461ffff1661ffff811061395d57fe5b825191018054602084015160408501516060909501511515600160f81b026001600160f81b036001600160a01b03909616600160581b02600160581b600160f81b031960069390930b66ffffffffffffff16600160201b0266ffffffffffffff60201b1963ffffffff90971663ffffffff199095169490941795909516929092171692909217929092161790555097509795505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b60208310613a735780518252601f199092019160209182019101613a54565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613ad5576040519150601f19603f3d011682016040523d82523d6000602084013e613ada565b606091505b5091509150818015613b08575080511580613b085750808060200190516020811015613b0557600080fd5b50515b613b3e576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083835b60208310613bde5780518252601f199092019160209182019101613bbf565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613c3e576040519150601f19603f3d011682016040523d82523d6000602084013e613c43565b606091505b5091509150818015613c5757506020815110155b613c6057600080fd5b808060200190516020811015613c7557600080fd5b50519250505090565b808201828110156131b957600080fd5b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016939192909182919080838360208310613bde5780518252601f199092019160209182019101613bbf565b6000808361ffff1611613d64576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b8261ffff168261ffff1611613d7a57508161327e565b825b8261ffff168161ffff161015613dc0576001858261ffff1661ffff8110613d9f57fe5b01805463ffffffff191663ffffffff92909216919091179055600101613d7c565b50909392505050565b80600f81900b8114612af257600080fd5b6000806000613de7612af7565b613df98460200151856040015161420b565b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602080840182905261ffff600160b81b8404811685870152600160c81b84048116606080870191909152600160d81b8504909116608086015260ff600160e81b8504811660a0870152600160f01b909404909316151560c085015288519089015194890151928901519394613e9d9491939092909190614910565b93508460600151600f0b60001461401257846020015160020b816020015160020b1215613ef257613eeb613ed48660200151612c74565b613ee18760400151612c74565b8760600151614ac5565b9250614012565b846040015160020b816020015160020b1215613fe85760045460408201516001600160801b0390911690613f4490613f28612b2e565b6020850151606086015160808701516008949392918791613872565b6000805461ffff60c81b1916600160c81b61ffff938416021761ffff60b81b1916600160b81b939092169290920217905581516040870151613f949190613f8a90612c74565b8860600151614ac5565b9350613fb2613fa68760200151612c74565b83516060890151614b09565b9250613fc28187606001516134d1565b600480546001600160801b0319166001600160801b039290921691909117905550614012565b61400f613ff88660200151612c74565b6140058760400151612c74565b8760600151614b09565b91505b509193909250565b60006140278484846131d5565b90506000828061403357fe5b848609111561327e57600019811061404a57600080fd5b6001019392505050565b6040805160609490941b6001600160601b031916602080860191909152600293840b60e890811b60348701529290930b90911b60378401528051808403601a018152603a90930181528251928201929092206000908152929052902090565b60608060008361ffff16116140f3576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b86516001600160401b038111801561410a57600080fd5b50604051908082528060200260200182016040528015614134578160200160208202803683370190505b50915086516001600160401b038111801561414e57600080fd5b50604051908082528060200260200182016040528015614178578160200160208202803683370190505b50905060005b87518110156141fe576141a98a8a8a848151811061419857fe5b60200260200101518a8a8a8a613285565b8483815181106141b557fe5b602002602001018484815181106141c857fe5b60200260200101826001600160a01b03166001600160a01b03168152508260060b60060b8152505050808060010191505061417e565b5097509795505050505050565b8060020b8260020b1261424b576040805162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015290519081900360640190fd5b620d89e719600283900b121561428e576040805162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015290519081900360640190fd5b620d89e8600282900b13156142d0576040805162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015290519081900360640190fd5b5050565b6040805160808101825263ffffffff9283168082526000602083018190529282019290925260016060909101819052835463ffffffff1916909117909116600160f81b17909155908190565b60020b600881901d9161010090910790565b600080821161434057600080fd5b600160801b821061435357608091821c91015b600160401b821061436657604091821c91015b600160201b821061437957602091821c91015b62010000821061438b57601091821c91015b610100821061439c57600891821c91015b601082106143ac57600491821c91015b600482106143bc57600291821c91015b60028210612af257600101919050565b60008082116143da57600080fd5b5060ff6001600160801b038216156143f557607f19016143fd565b608082901c91505b6001600160401b0382161561441557603f190161441d565b604082901c91505b63ffffffff82161561443257601f190161443a565b602082901c91505b61ffff82161561444d57600f1901614455565b601082901c91505b60ff821615614467576007190161446f565b600882901c91505b600f8216156144815760031901614489565b600482901c91505b600382161561449b57600119016144a3565b600282901c91505b6001821615612af25760001901919050565b6000836001600160a01b0316856001600160a01b031611156144d5579293925b81614502576144fd836001600160801b03168686036001600160a01b0316600160601b6131d5565b614525565b614525836001600160801b03168686036001600160a01b0316600160601b61401a565b90505b949350505050565b6000836001600160a01b0316856001600160a01b03161115614550579293925b600160601b600160e01b03606084901b166001600160a01b03868603811690871661457a57600080fd5b836145aa57866001600160a01b031661459d8383896001600160a01b03166131d5565b816145a457fe5b046145d0565b6145d06145c18383896001600160a01b031661401a565b886001600160a01b0316614b38565b979650505050505050565b600080856001600160a01b0316116145f257600080fd5b6000846001600160801b03161161460857600080fd5b8161461a576144fd8585856001614b43565b6145258585856001614c24565b600080856001600160a01b03161161463e57600080fd5b6000846001600160801b03161161465457600080fd5b81614666576144fd8585856000614c24565b6145258585856000614b43565b61467b615444565b600085600001518503905060405180608001604052808663ffffffff1681526020018263ffffffff168660020b0288602001510160060b81526020016000856001600160801b0316116146cf5760016146d1565b845b6001600160801b031663ffffffff60801b608085901b16816146ef57fe5b048860400151016001600160a01b0316815260200160011515815250915050949350505050565b61471e615444565b614726615444565b888561ffff1661ffff811061473757fe5b60408051608081018252919092015463ffffffff8116808352600160201b8204600690810b810b900b6020840152600160581b82046001600160a01b031693830193909352600160f81b900460ff1615156060820152925061479b90899089614d07565b156147d3578663ffffffff16826000015163ffffffff1614156147bd5761340b565b816147ca83898988614673565b9150915061340b565b888361ffff168660010161ffff16816147e857fe5b0661ffff1661ffff81106147f857fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b909104161515606082018190529092506148ad57604080516080810182528a5463ffffffff81168252600160201b8104600690810b810b900b6020830152600160581b81046001600160a01b031692820192909252600160f81b90910460ff161515606082015291505b6148bc88836000015189614d07565b6148f3576040805162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015290519081900360640190fd5b6149008989898887614dc8565b9150915097509795505050505050565b600061491f6007878787614054565b60015460025491925090600080600f87900b15614a65576000614940612b2e565b600080546004549293509091829161498a9160089186918591600160a01b810460020b9161ffff600160b81b83048116926001600160801b0390921691600160c81b900416613285565b90925090506149c460058d8b8d8b8b87898b60007f0000000000000000000000000000000000000000000000000000000000000000614f66565b94506149fb60058c8b8d8b8b87898b60017f0000000000000000000000000000000000000000000000000000000000000000614f66565b93508415614a2f57614a2f60068d7f000000000000000000000000000000000000000000000000000000000000000061511f565b8315614a6157614a6160068c7f000000000000000000000000000000000000000000000000000000000000000061511f565b5050505b600080614a7760058c8c8b8a8a615185565b9092509050614a88878a8484615231565b600089600f0b1215614ab6578315614aa557614aa560058c6153c6565b8215614ab657614ab660058b6153c6565b50505050505095945050505050565b60008082600f0b12614aeb57614ae6614ae18585856001614530565b61318d565b614528565b614afe614ae18585856000036000614530565b600003949350505050565b60008082600f0b12614b2557614ae6614ae185858560016144b5565b614afe614ae185858560000360006144b5565b808204910615150190565b60008115614bb65760006001600160a01b03841115614b7957614b7484600160601b876001600160801b03166131d5565b614b91565b6001600160801b038516606085901b81614b8f57fe5b045b9050614bae614ba96001600160a01b03881683613c7e565b6153f2565b915050614528565b60006001600160a01b03841115614be457614bdf84600160601b876001600160801b031661401a565b614bfb565b614bfb606085901b6001600160801b038716614b38565b905080866001600160a01b031611614c1257600080fd5b6001600160a01b038616039050614528565b600082614c32575083614528565b600160601b600160e01b03606085901b168215614cc0576001600160a01b03861684810290858281614c6057fe5b041415614c9157818101828110614c8f57614c8583896001600160a01b03168361401a565b9350505050614528565b505b614cb782614cb2878a6001600160a01b03168681614cab57fe5b0490613c7e565b614b38565b92505050614528565b6001600160a01b03861684810290858281614cd757fe5b04148015614ce457508082115b614ced57600080fd5b808203614c85614ba9846001600160a01b038b168461401a565b60008363ffffffff168363ffffffff1611158015614d3157508363ffffffff168263ffffffff1611155b15614d4d578163ffffffff168363ffffffff161115905061327e565b60008463ffffffff168463ffffffff1611614d74578363ffffffff16600160201b01614d7c565b8363ffffffff165b64ffffffffff16905060008563ffffffff168463ffffffff1611614dac578363ffffffff16600160201b01614db4565b8363ffffffff165b64ffffffffff169091111595945050505050565b614dd0615444565b614dd8615444565b60008361ffff168560010161ffff1681614dee57fe5b0661ffff169050600060018561ffff16830103905060005b506002818301048961ffff87168281614e1b57fe5b0661ffff8110614e2757fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201819052909550614e9157806001019250614e06565b898661ffff168260010181614ea257fe5b0661ffff8110614eae57fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201528551909450600090614f18908b908b614d07565b9050808015614f315750614f318a8a8760000151614d07565b15614f3c5750614f59565b80614f4c57600182039250614f53565b8160010193505b50614e06565b5050509550959350505050565b60028a810b900b600090815260208c90526040812080546001600160801b031682614f91828d6134d1565b9050846001600160801b0316816001600160801b03161115614fdf576040805162461bcd60e51b81526020600482015260026024820152614c4f60f01b604482015290519081900360640190fd5b6001600160801b038281161590821615811415945015615084578c60020b8e60020b1361506c57600183018b9055600283018a9055600383018054600160381b600160d81b031916600160381b6001600160a01b038c16021766ffffffffffffff191666ffffffffffffff60068b900b161763ffffffff60d81b1916600160d81b63ffffffff8a16021790555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b038216178355856150cd5782546150c8906150c390600160801b9004600f90810b810b908f900b6131bf565b613dc9565b6150ee565b82546150ee906150c390600160801b9004600f90810b810b908f900b6131a3565b8354600f9190910b6001600160801b03908116600160801b0291161790925550909c9b505050505050505050505050565b8060020b8260020b8161512e57fe5b0760020b1561513c57600080fd5b6000806151578360020b8560020b8161515157fe5b05614320565b600191820b820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600285810b80820b60009081526020899052604080822088850b850b83529082209193849391929184918291908a900b126151cb575050600182015460028301546151de565b8360010154880391508360020154870390505b6000808b60020b8b60020b121561520057505060018301546002840154615213565b84600101548a0391508460020154890390505b92909803979097039b96909503949094039850939650505050505050565b6040805160a08101825285546001600160801b0390811682526001870154602083015260028701549282019290925260038601548083166060830152600160801b900490911660808201526000600f85900b6152d05781516001600160801b03166152c8576040805162461bcd60e51b815260206004820152600260248201526104e560f41b604482015290519081900360640190fd5b5080516152df565b81516152dc90866134d1565b90505b60006153038360200151860384600001516001600160801b0316600160801b6131d5565b905060006153298460400151860385600001516001600160801b0316600160801b6131d5565b905086600f0b6000146153505787546001600160801b0319166001600160801b0384161788555b60018801869055600288018590556001600160801b03821615158061537e57506000816001600160801b0316115b156153bc576003880180546001600160801b031981166001600160801b039182168501821617808216600160801b9182900483168501909216021790555b5050505050505050565b600290810b810b6000908152602092909252604082208281556001810183905590810182905560030155565b806001600160a01b0381168114612af257600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fea2646970667358221220973322e6fab6821c8a0c6c9b053d753a3802932c8e5afcd22a3bbcdaa5704a5f64736f6c63430007060033a264697066735822122069aac2091c002513185726155a7a2566bf6ba191b9af3ba489c164f11d94d5ed64736f6c63430007060033c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061006d5760003560e01c806313af4035146100725780631698ee821461008757806322afcccb146100b057806389035730146100d05780638a7c195f146100e95780638da5cb5b146100fc578063a167129514610104575b600080fd5b610085610080366004610608565b610117565b005b61009a610095366004610629565b61018a565b6040516100a791906106c0565b60405180910390f35b6100c36100be36600461066b565b6101b6565b6040516100a7919061070f565b6100d86101cb565b6040516100a79594939291906106d4565b6100856100f7366004610685565b610201565b61009a6102c4565b61009a610112366004610629565b6102d3565b6003546001600160a01b0316331461012e57600080fd5b6003546040516001600160a01b038084169216907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c90600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b60056020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b60046020526000908152604090205460020b81565b600054600154600280546001600160a01b03938416939283169281169162ffffff600160a01b83041691600160b81b9004900b85565b6003546001600160a01b0316331461021857600080fd5b620f42408262ffffff161061022c57600080fd5b60008160020b13801561024357506140008160020b125b61024c57600080fd5b62ffffff8216600090815260046020526040902054600290810b900b1561027257600080fd5b62ffffff828116600081815260046020526040808220805462ffffff1916600287900b958616179055517fc66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc9190a35050565b6003546001600160a01b031681565b60006102dd610467565b826001600160a01b0316846001600160a01b031614156102fc57600080fd5b600080846001600160a01b0316866001600160a01b03161061031f578486610322565b85855b90925090506001600160a01b03821661033a57600080fd5b62ffffff8416600090815260046020526040902054600290810b9081900b61036157600080fd5b6001600160a01b0383811660009081526005602090815260408083208685168452825280832062ffffff8a16845290915290205416156103a057600080fd5b6103ad308484888561049e565b6001600160a01b03808516600081815260056020818152604080842089871680865290835281852062ffffff8e168087529084528286208054988a166001600160a01b0319998a16811790915582875294845282862087875284528286208187529093529381902080549096169092179094555193975091927f783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118906104559086908a9061071d565b60405180910390a45050509392505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461049c57600080fd5b565b6040805160a0810182526001600160a01b03878116808352878216602080850182905292881684860181905262ffffff888116606080880182905260028a810b6080998a01819052600080546001600160a01b03199081169099178155600180548a16891790558254909816861762ffffff60a01b1916600160a01b85021762ffffff60b81b1916600160b81b91830b9095160293909317909255875180870194909452838801929092528281019190915285518083039091018152930193849052825192909101919091209091610575906105cc565b8190604051809103906000f5905080158015610595573d6000803e3d6000fd5b50600080546001600160a01b0319908116909155600180549091169055600280546001600160d01b03191690559695505050505050565b6156eb8061073a83390190565b80356001600160a01b03811681146105f057600080fd5b919050565b803562ffffff811681146105f057600080fd5b600060208284031215610619578081fd5b610622826105d9565b9392505050565b60008060006060848603121561063d578182fd5b610646846105d9565b9250610654602085016105d9565b9150610662604085016105f5565b90509250925092565b60006020828403121561067c578081fd5b610622826105f5565b60008060408385031215610697578182fd5b6106a0836105f5565b915060208301358060020b81146106b5578182fd5b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b039586168152938516602085015291909316604083015262ffffff909216606082015260029190910b608082015260a00190565b60029190910b815260200190565b60029290920b82526001600160a01b031660208201526040019056fe6101606040523480156200001257600080fd5b503060601b60805260408051630890357360e41b81529051600091339163890357309160048082019260a092909190829003018186803b1580156200005657600080fd5b505afa1580156200006b573d6000803e3d6000fd5b505050506040513d60a08110156200008257600080fd5b508051602080830151604084015160608086015160809096015160e896871b6001600160e81b0319166101005291811b6001600160601b031990811660e05292811b831660c0529390931b1660a052600282810b900b90921b610120529150620000f79082906200010f811b62002a8b17901c565b60801b6001600160801b03191661014052506200017d565b60008082600281900b620d89e719816200012557fe5b05029050600083600281900b620d89e8816200013d57fe5b0502905060008460020b83830360020b816200015557fe5b0560010190508062ffffff166001600160801b038016816200017357fe5b0495945050505050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160e81c6101205160e81c6101405160801c6154a16200024a60003980611f5b52806149a052806149d7525080610b8852806128475280614a0b5280614a3d525080610c775280611938528061196f528061288f52508061113552806119f25280611e615280612396528061286b5280613cdc52508061085a528061126352806119c15280611dfb52806123105280613b93525080611fe852806121cf5280612823525080612b0252506154a16000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c80630dfe168114610143578063128acb08146101675780631a686502146102145780631ad8b03b14610238578063252c09d71461026f57806332148f67146102c65780633850c7bd146102e95780633c8a7d8d1461034257806346141319146103e2578063490e6cbc146103fc5780634f1eb3d814610486578063514ea4bf146104d75780635339c2961461053057806370cf754a146105505780638206a4d11461055857806385b6672914610580578063883bdbfd146105bd578063a34123a7146106c4578063a38807f2146106fe578063c45a015514610759578063d0c93a7c14610761578063d21220a714610780578063ddca3f4314610788578063f3058399146107a8578063f30dba93146107b0578063f637731d14610832575b600080fd5b61014b610858565b604080516001600160a01b039092168252519081900360200190f35b6101fb600480360360a081101561017d57600080fd5b6001600160a01b0382358116926020810135151592604082013592606083013516919081019060a081016080820135600160201b8111156101bd57600080fd5b8201836020820111156101cf57600080fd5b803590602001918460018302840111600160201b831117156101f057600080fd5b50909250905061087c565b6040805192835260208301919091528051918290030190f35b61021c61141b565b604080516001600160801b039092168252519081900360200190f35b61024061142a565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b61028c6004803603602081101561028557600080fd5b5035611444565b6040805163ffffffff909516855260069390930b60208501526001600160a01b039091168383015215156060830152519081900360800190f35b6102e7600480360360208110156102dc57600080fd5b503561ffff16611489565b005b6102f1611583565b604080516001600160a01b03909816885260029690960b602088015261ffff9485168787015292841660608701529216608085015260ff90911660a0840152151560c0830152519081900360e00190f35b6101fb600480360360a081101561035857600080fd5b6001600160a01b03823516916020810135600290810b92604083013590910b916001600160801b036060820135169181019060a081016080820135600160201b8111156103a457600080fd5b8201836020820111156103b657600080fd5b803590602001918460018302840111600160201b831117156103d757600080fd5b5090925090506115d3565b6103ea61188f565b60408051918252519081900360200190f35b6102e76004803603608081101561041257600080fd5b6001600160a01b038235169160208101359160408201359190810190608081016060820135600160201b81111561044857600080fd5b82018360208201111561045a57600080fd5b803590602001918460018302840111600160201b8311171561047b57600080fd5b509092509050611895565b610240600480360360a081101561049c57600080fd5b506001600160a01b03813516906020810135600290810b91604081013590910b906001600160801b0360608201358116916080013516611cf0565b6104f4600480360360208110156104ed57600080fd5b5035611f0a565b604080516001600160801b0396871681526020810195909552848101939093529084166060840152909216608082015290519081900360a00190f35b6103ea6004803603602081101561054657600080fd5b503560010b611f47565b61021c611f59565b6102e76004803603604081101561056e57600080fd5b5060ff81358116916020013516611f7d565b6102406004803603606081101561059657600080fd5b506001600160a01b03813516906001600160801b0360208201358116916040013516612161565b61062b600480360360208110156105d357600080fd5b810190602081018135600160201b8111156105ed57600080fd5b8201836020820111156105ff57600080fd5b803590602001918460208302840111600160201b8311171561062057600080fd5b50909250905061242e565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561066f578181015183820152602001610657565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156106ae578181015183820152602001610696565b5050505090500194505050505060405180910390f35b6101fb600480360360608110156106da57600080fd5b508035600290810b91602081013590910b90604001356001600160801b03166124bb565b6107286004803603604081101561071457600080fd5b508035600290810b9160200135900b612632565b6040805160069490940b84526001600160a01b03909216602084015263ffffffff1682820152519081900360600190f35b61014b612821565b610769612845565b6040805160029290920b8252519081900360200190f35b61014b612869565b61079061288d565b6040805162ffffff9092168252519081900360200190f35b6103ea6128b1565b6107d0600480360360208110156107c657600080fd5b503560020b6128b7565b604080516001600160801b039099168952600f9790970b602089015287870195909552606087019390935260069190910b60808601526001600160a01b031660a085015263ffffffff1660c0840152151560e083015251908190036101000190f35b6102e76004803603602081101561084857600080fd5b50356001600160a01b0316612921565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610887612af7565b856108be576040805162461bcd60e51b8152602060048201526002602482015261415360f01b604482015290519081900360640190fd5b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602083015261ffff600160b81b8204811693830193909352600160c81b810483166060830152600160d81b8104909216608082015260ff600160e81b8304811660a0830152600160f01b909204909116151560c08201819052610977576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b876109c25780600001516001600160a01b0316866001600160a01b03161180156109bd575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b6109f4565b80600001516001600160a01b0316866001600160a01b03161080156109f457506401000276a36001600160a01b038716115b610a2b576040805162461bcd60e51b815260206004820152600360248201526214d41360ea1b604482015290519081900360640190fd5b6000805460ff60f01b191681556040805160c08101909152808a610a5a5760048460a0015160ff16901c610a6d565b60108460a0015160ff1681610a6b57fe5b065b60ff1681526004546001600160801b03166020820152604001610a8e612b2e565b63ffffffff168152602001600060060b815260200160006001600160a01b031681526020016000151581525090506000808913905060006040518060e001604052808b81526020016000815260200185600001516001600160a01b03168152602001856020015160020b81526020018c610b0a57600254610b0e565b6001545b815260200160006001600160801b0316815260200184602001516001600160801b031681525090505b805115801590610b5d5750886001600160a01b031681604001516001600160a01b031614155b15610f2757610b6a615408565b60408201516001600160a01b031681526060820151610bad906006907f00000000000000000000000000000000000000000000000000000000000000008f612b32565b15156040830152600290810b810b60208301819052620d89e719910b1215610bde57620d89e7196020820152610bfd565b6020810151620d89e860029190910b1315610bfd57620d89e860208201525b610c0a8160200151612c74565b6001600160a01b031660608201526040820151610c9b908d610c44578b6001600160a01b031683606001516001600160a01b031611610c5e565b8b6001600160a01b031683606001516001600160a01b0316105b610c6c578260600151610c6e565b8b5b60c085015185517f0000000000000000000000000000000000000000000000000000000000000000612f9b565b60c085015260a084015260808301526001600160a01b031660408301528215610cfd57610cd18160c0015182608001510161318d565b825103825260a0810151610cf390610ce89061318d565b6020840151906131a3565b6020830152610d38565b610d0a8160a0015161318d565b825101825260c08101516080820151610d3291610d27910161318d565b6020840151906131bf565b60208301525b835160ff1615610d7e576000846000015160ff168260c0015181610d5857fe5b60c0840180519290910491829003905260a0840180519091016001600160801b03169052505b60c08201516001600160801b031615610dbd57610db18160c00151600160801b8460c001516001600160801b03166131d5565b60808301805190910190525b80606001516001600160a01b031682604001516001600160a01b03161415610ee657806040015115610ebd578360a00151610e4757610e25846040015160008760200151886040015188602001518a606001516008613285909695949392919063ffffffff16565b6001600160a01b03166080860152600690810b900b6060850152600160a08501525b6000610e9382602001518e610e5e57600154610e64565b84608001515b8f610e73578560800151610e77565b6002545b608089015160608a015160408b01516005959493929190613417565b90508c15610e9f576000035b610ead8360c00151826134d1565b6001600160801b031660c0840152505b8b610ecc578060200151610ed5565b60018160200151035b600290810b900b6060830152610f21565b80600001516001600160a01b031682604001516001600160a01b031614610f2157610f148260400151613587565b600290810b900b60608301525b50610b37565b836020015160020b816060015160020b14610ff557600080610f7586604001518660400151886020015188602001518a606001518b608001516008613872909695949392919063ffffffff16565b604085015160608601516000805461ffff60c81b1916600160c81b61ffff958616021761ffff60b81b1916600160b81b95909416949094029290921762ffffff60a01b1916600160a01b62ffffff60029490940b9390931692909202919091176001600160a01b0319166001600160a01b039091161790555061101a9050565b6040810151600080546001600160a01b0319166001600160a01b039092169190911790555b8060c001516001600160801b031683602001516001600160801b0316146110605760c0810151600480546001600160801b0319166001600160801b039092169190911790555b8a156110b057608081015160015560a08101516001600160801b0316156110ab5760a0810151600380546001600160801b031981166001600160801b03918216909301169190911790555b6110f6565b608081015160025560a08101516001600160801b0316156110f65760a0810151600380546001600160801b03808216600160801b92839004821690940116029190911790555b8115158b15151461110f57602081015181518b0361111c565b80600001518a0381602001515b90965094508a1561125557600085121561115e5761115e7f00000000000000000000000000000000000000000000000000000000000000008d876000036139f7565b6000611168613b45565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b1580156111ec57600080fd5b505af1158015611200573d6000803e3d6000fd5b5050505061120c613b45565b6112168289613c7e565b111561124f576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b5061137f565b600086121561128c5761128c7f00000000000000000000000000000000000000000000000000000000000000008d886000036139f7565b6000611296613c8e565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561131a57600080fd5b505af115801561132e573d6000803e3d6000fd5b5050505061133a613c8e565b6113448288613c7e565b111561137d576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b505b60408082015160c083015160608085015184518b8152602081018b90526001600160a01b03948516818701526001600160801b039093169183019190915260020b60808201529151908e169133917fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca679181900360a00190a350506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b6004546001600160801b031681565b6003546001600160801b0380821691600160801b90041682565b60088161ffff811061145557600080fd5b015463ffffffff81169150600160201b810460060b90600160581b81046001600160a01b031690600160f81b900460ff1684565b600054600160f01b900460ff166114cd576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556114e2612af7565b60008054600160d81b900461ffff16906114fe60088385613d26565b6000805461ffff808416600160d81b810261ffff60d81b199093169290921790925591925083161461156b576040805161ffff80851682528316602082015281517fac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a929181900390910190a15b50506000805460ff60f01b1916600160f01b17905550565b6000546001600160a01b03811690600160a01b810460020b9061ffff600160b81b8204811691600160c81b8104821691600160d81b8204169060ff600160e81b8204811691600160f01b90041687565b600080548190600160f01b900460ff1661161a576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556001600160801b03851661163a57600080fd5b60008061168860405180608001604052808c6001600160a01b031681526020018b60020b81526020018a60020b815260200161167e8a6001600160801b0316613dc9565b600f0b9052613dda565b925092505081935080925060008060008611156116aa576116a7613b45565b91505b84156116bb576116b8613c8e565b90505b336001600160a01b031663d348799787878b8b6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561173d57600080fd5b505af1158015611751573d6000803e3d6000fd5b5050505060008611156117a857611766613b45565b6117708388613c7e565b11156117a8576040805162461bcd60e51b815260206004820152600260248201526104d360f41b604482015290519081900360640190fd5b84156117f8576117b6613c8e565b6117c08287613c7e565b11156117f8576040805162461bcd60e51b81526020600482015260026024820152614d3160f01b604482015290519081900360640190fd5b8960020b8b60020b8d6001600160a01b03167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338d8b8b60405180856001600160a01b03168152602001846001600160801b0316815260200183815260200182815260200194505050505060405180910390a450506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b60025481565b600054600160f01b900460ff166118d9576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556118ee612af7565b6004546001600160801b031680611930576040805162461bcd60e51b81526020600482015260016024820152601360fa1b604482015290519081900360640190fd5b6000611965867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f424061401a565b9050600061199c867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f424061401a565b905060006119a8613b45565b905060006119b4613c8e565b905088156119e7576119e77f00000000000000000000000000000000000000000000000000000000000000008b8b6139f7565b8715611a1857611a187f00000000000000000000000000000000000000000000000000000000000000008b8a6139f7565b336001600160a01b031663e9cbafb085858a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b158015611a9a57600080fd5b505af1158015611aae573d6000803e3d6000fd5b505050506000611abc613b45565b90506000611ac8613c8e565b905081611ad58588613c7e565b1115611b0d576040805162461bcd60e51b8152602060048201526002602482015261046360f41b604482015290519081900360640190fd5b80611b188487613c7e565b1115611b50576040805162461bcd60e51b8152602060048201526002602482015261463160f01b604482015290519081900360640190fd5b8382038382038115611bdf5760008054600160e81b9004600f16908115611b83578160ff168481611b7d57fe5b04611b86565b60005b90506001600160801b03811615611bb957600380546001600160801b038082168401166001600160801b03199091161790555b611bd3818503600160801b8d6001600160801b03166131d5565b60018054909101905550505b8015611c6a5760008054600160e81b900460041c600f16908115611c0f578160ff168381611c0957fe5b04611c12565b60005b90506001600160801b03811615611c4457600380546001600160801b03600160801b8083048216850182160291161790555b611c5e818403600160801b8d6001600160801b03166131d5565b60028054909101905550505b8d6001600160a01b0316336001600160a01b03167fbdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca6338f8f86866040518085815260200184815260200183815260200182815260200194505050505060405180910390a350506000805460ff60f01b1916600160f01b179055505050505050505050505050565b600080548190600160f01b900460ff16611d37576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19168155611d516007338989614054565b60038101549091506001600160801b0390811690861611611d725784611d81565b60038101546001600160801b03165b60038201549093506001600160801b03600160801b909104811690851611611da95783611dbf565b6003810154600160801b90046001600160801b03165b91506001600160801b03831615611e24576003810180546001600160801b031981166001600160801b03918216869003821617909155611e24907f0000000000000000000000000000000000000000000000000000000000000000908a9086166139f7565b6001600160801b03821615611e8a576003810180546001600160801b03600160801b808304821686900382160291811691909117909155611e8a907f0000000000000000000000000000000000000000000000000000000000000000908a9085166139f7565b604080516001600160a01b038a1681526001600160801b0380861660208301528416818301529051600288810b92908a900b9133917f70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0919081900360600190a4506000805460ff60f01b1916600160f01b17905590969095509350505050565b60076020526000908152604090208054600182015460028301546003909301546001600160801b0392831693919281811691600160801b90041685565b60066020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160f01b900460ff16611fc1576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561202e57600080fd5b505afa158015612042573d6000803e3d6000fd5b505050506040513d602081101561205857600080fd5b50516001600160a01b0316331461206e57600080fd5b60ff82161580612091575060048260ff16101580156120915750600a8260ff1611155b80156120bb575060ff811615806120bb575060048160ff16101580156120bb5750600a8160ff1611155b6120c457600080fd5b60008054610ff0600484901b16840160ff908116600160e81b90810260ff60e81b19841617909355919004167f973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b1336010826040805160ff9390920683168252600f600486901c16602083015286831682820152918516606082015290519081900360800190a150506000805460ff60f01b1916600160f01b17905550565b600080548190600160f01b900460ff166121a8576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561221557600080fd5b505afa158015612229573d6000803e3d6000fd5b505050506040513d602081101561223f57600080fd5b50516001600160a01b0316331461225557600080fd5b6003546001600160801b0390811690851611612271578361227e565b6003546001600160801b03165b6003549092506001600160801b03600160801b9091048116908416116122a457826122b8565b600354600160801b90046001600160801b03165b90506001600160801b03821615612339576003546001600160801b03838116911614156122e757600019909101905b600380546001600160801b031981166001600160801b03918216859003821617909155612339907f000000000000000000000000000000000000000000000000000000000000000090879085166139f7565b6001600160801b038116156123bf576003546001600160801b03828116600160801b90920416141561236a57600019015b600380546001600160801b03600160801b8083048216859003821602918116919091179091556123bf907f000000000000000000000000000000000000000000000000000000000000000090879084166139f7565b604080516001600160801b0380851682528316602082015281516001600160a01b0388169233927f596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151929081900390910190a36000805460ff60f01b1916600160f01b1790559094909350915050565b606080612439612af7565b6124b0612444612b2e565b858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054600454600896959450600160a01b820460020b935061ffff600160b81b8304811693506001600160801b0390911691600160c81b9004166140b3565b915091509250929050565b600080548190600160f01b900460ff16612502576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916815560408051608081018252338152600288810b602083015287900b918101919091528190819061255b906060810161254e6001600160801b038a16613dc9565b600003600f0b9052613dda565b925092509250816000039450806000039350600085118061257c5750600084115b156125bb576003830180546001600160801b038082168089018216600160801b93849004831689019092169092029091176001600160801b0319161790555b604080516001600160801b0388168152602081018790528082018690529051600289810b92908b900b9133917f0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c919081900360600190a450506000805460ff60f01b1916600160f01b179055509094909350915050565b600080600061263f612af7565b612649858561420b565b600285810b810b60009081526005602052604080822087840b90930b825281206003830154600681900b93600160381b82046001600160a01b0316928492600160d81b810463ffffffff169284929091600160f81b900460ff16806126ad57600080fd5b6003820154600681900b9850600160381b81046001600160a01b03169650600160d81b810463ffffffff169450600160f81b900460ff16806126ee57600080fd5b50506040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b810b6020840181905261ffff600160b81b8404811695850195909552600160c81b830485166060850152600160d81b8304909416608084015260ff600160e81b8304811660a0850152600160f01b909204909116151560c08301529093508e810b91900b121590506127975750939094039650900393509003905061281a565b8a60020b816020015160020b121561280b5760006127b3612b2e565b60208301516040840151600454606086015193945060009384936127e9936008938893879392916001600160801b031690613285565b9a9003989098039b50509490960392909203965090910303925061281a915050565b50949093039650039350900390505b9250925092565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60056020526000908152604090208054600182015460028301546003909301546001600160801b03831693600160801b909304600f0b9290600681900b90600160381b81046001600160a01b031690600160d81b810463ffffffff1690600160f81b900460ff1688565b6000546001600160a01b031615612964576040805162461bcd60e51b8152602060048201526002602482015261414960f01b604482015290519081900360640190fd5b600061296f82613587565b905060008061298761297f612b2e565b6008906142d4565b6040805160e0810182526001600160a01b038816808252600288810b6020808501829052600085870181905261ffff898116606088018190529089166080880181905260a08801839052600160c0909801979097528154600160f01b6001600160a01b0319909116871762ffffff60a01b1916600160a01b62ffffff9787900b97909716969096029590951763ffffffff60b81b1916600160c81b9091021761ffff60d81b1916600160d81b9096029590951761ffff60e81b191692909217909355835191825281019190915281519395509193507f98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c9592918290030190a150505050565b60008082600281900b620d89e71981612aa057fe5b05029050600083600281900b620d89e881612ab757fe5b0502905060008460020b83830360020b81612ace57fe5b0560010190508062ffffff166001600160801b03801681612aeb57fe5b0493505050505b919050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612b2c57600080fd5b565b4290565b60008060008460020b8660020b81612b4657fe5b05905060008660020b128015612b6d57508460020b8660020b81612b6657fe5b0760020b15155b15612b7757600019015b8315612bec57600080612b8983614320565b600182810b810b600090815260208d9052604090205460ff83169190911b80016000190190811680151597509294509092509085612bce57888360ff16860302612be1565b88612bd882614332565b840360ff168603025b965050505050612c6a565b600080612bfb83600101614320565b91509150600060018260ff166001901b031990506000818b60008660010b60010b8152602001908152602001600020541690508060001415955085612c4d57888360ff0360ff16866001010102612c63565b8883612c58836143cc565b0360ff168660010101025b9650505050505b5094509492505050565b60008060008360020b12612c8b578260020b612c93565b8260020b6000035b9050620d89e8811115612cd1576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216612ce557600160801b612cf7565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b031690506002821615612d21576ffff97272373d413259a46990580e213a0260801c5b6004821615612d40576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612d5f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612d7e576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612d9d576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612dbc576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612ddb576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612dfb576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612e1b576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612e3b576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612e5b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612e7b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612e9b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612ebb576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612edb576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612efc576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612f1c576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612f3b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612f58576b048a170391f7dc42444e8fa20260801c5b60008460020b1315612f73578060001981612f6f57fe5b0490505b600160201b810615612f86576001612f89565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a161015818712801590613020576000612fd48989620f42400362ffffff16620f42406131d5565b905082612fed57612fe88c8c8c60016144b5565b612ffa565b612ffa8b8d8c6001614530565b955085811061300b578a965061301a565b6130178c8b83866145db565b96505b5061306a565b81613037576130328b8b8b6000614530565b613044565b6130448a8c8b60006144b5565b93508388600003106130585789955061306a565b6130678b8a8a60000385614627565b95505b6001600160a01b038a81169087161482156130cd578080156130895750815b61309f5761309a878d8c6001614530565b6130a1565b855b95508080156130ae575081155b6130c4576130bf878d8c60006144b5565b6130c6565b845b9450613117565b8080156130d75750815b6130ed576130e88c888c60016144b5565b6130ef565b855b95508080156130fc575081155b6131125761310d8c888c6000614530565b613114565b845b94505b8115801561312757508860000385115b15613133578860000394505b81801561315257508a6001600160a01b0316876001600160a01b031614155b1561316157858903935061317e565b61317b868962ffffff168a620f42400362ffffff1661401a565b93505b50505095509550955095915050565b6000600160ff1b821061319f57600080fd5b5090565b808203828113156000831215146131b957600080fd5b92915050565b818101828112156000831215146131b957600080fd5b600080806000198587098686029250828110908390030390508061320b576000841161320057600080fd5b50829004905061327e565b80841161321757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008063ffffffff871661332b576000898661ffff1661ffff81106132a657fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff16151560608301529092508a161461331757613314818a8988614673565b90505b80602001518160400151925092505061340b565b8688036000806133408c8c858c8c8c8c614716565b91509150816000015163ffffffff168363ffffffff16141561337257816020015182604001519450945050505061340b565b805163ffffffff8481169116141561339a57806020015181604001519450945050505061340b565b8151815160208085015190840151918390039286039163ffffffff80841692908516910360060b816133c857fe5b05028460200151018263ffffffff168263ffffffff1686604001518660400151036001600160a01b031602816133fa57fe5b048560400151019650965050505050505b97509795505050505050565b600295860b860b60009081526020979097526040909620600181018054909503909455938301805490920390915560038201805463ffffffff600160d81b6001600160a01b03600160381b808504821690960316909402600160381b600160d81b031990921691909117600681810b90960390950b66ffffffffffffff1666ffffffffffffff199095169490941782810485169095039093160263ffffffff60d81b1990931692909217905554600160801b9004600f0b90565b60008082600f0b121561353657826001600160801b03168260000384039150816001600160801b031610613531576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b6131b9565b826001600160801b03168284019150816001600160801b031610156131b9576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b038316108015906135c3575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b6135f8576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b600160201b600160c01b03602083901b166001600160801b03811160071b81811c6001600160401b03811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c9790881196179094179092171790911717176080811061368a57607f810383901c9150613694565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c6001603f1b161760c19b909b1c6001603e1b169a909a1760c29990991c6001603d1b169890981760c39790971c6001603c1b169690961760c49590951c6001603b1b169490941760c59390931c6001603a1b169290921760c69190911c600160391b161760c79190911c600160381b161760c89190911c600160371b161760c99190911c600160361b161760ca9190911c600160351b161760cb9190911c600160341b161760cc9190911c600160331b161760cd9190911c600160321b1617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b1461386357886001600160a01b031661384782612c74565b6001600160a01b0316111561385c578161385e565b805b613865565b815b9998505050505050505050565b6000806000898961ffff1661ffff811061388857fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff1615156060830152909250891614156138f7578885925092505061340b565b8461ffff168461ffff1611801561391857506001850361ffff168961ffff16145b1561392557839150613929565b8491505b8161ffff168960010161ffff168161393d57fe5b06925061394c81898989614673565b8a8461ffff1661ffff811061395d57fe5b825191018054602084015160408501516060909501511515600160f81b026001600160f81b036001600160a01b03909616600160581b02600160581b600160f81b031960069390930b66ffffffffffffff16600160201b0266ffffffffffffff60201b1963ffffffff90971663ffffffff199095169490941795909516929092171692909217929092161790555097509795505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b60208310613a735780518252601f199092019160209182019101613a54565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613ad5576040519150601f19603f3d011682016040523d82523d6000602084013e613ada565b606091505b5091509150818015613b08575080511580613b085750808060200190516020811015613b0557600080fd5b50515b613b3e576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083835b60208310613bde5780518252601f199092019160209182019101613bbf565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613c3e576040519150601f19603f3d011682016040523d82523d6000602084013e613c43565b606091505b5091509150818015613c5757506020815110155b613c6057600080fd5b808060200190516020811015613c7557600080fd5b50519250505090565b808201828110156131b957600080fd5b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016939192909182919080838360208310613bde5780518252601f199092019160209182019101613bbf565b6000808361ffff1611613d64576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b8261ffff168261ffff1611613d7a57508161327e565b825b8261ffff168161ffff161015613dc0576001858261ffff1661ffff8110613d9f57fe5b01805463ffffffff191663ffffffff92909216919091179055600101613d7c565b50909392505050565b80600f81900b8114612af257600080fd5b6000806000613de7612af7565b613df98460200151856040015161420b565b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602080840182905261ffff600160b81b8404811685870152600160c81b84048116606080870191909152600160d81b8504909116608086015260ff600160e81b8504811660a0870152600160f01b909404909316151560c085015288519089015194890151928901519394613e9d9491939092909190614910565b93508460600151600f0b60001461401257846020015160020b816020015160020b1215613ef257613eeb613ed48660200151612c74565b613ee18760400151612c74565b8760600151614ac5565b9250614012565b846040015160020b816020015160020b1215613fe85760045460408201516001600160801b0390911690613f4490613f28612b2e565b6020850151606086015160808701516008949392918791613872565b6000805461ffff60c81b1916600160c81b61ffff938416021761ffff60b81b1916600160b81b939092169290920217905581516040870151613f949190613f8a90612c74565b8860600151614ac5565b9350613fb2613fa68760200151612c74565b83516060890151614b09565b9250613fc28187606001516134d1565b600480546001600160801b0319166001600160801b039290921691909117905550614012565b61400f613ff88660200151612c74565b6140058760400151612c74565b8760600151614b09565b91505b509193909250565b60006140278484846131d5565b90506000828061403357fe5b848609111561327e57600019811061404a57600080fd5b6001019392505050565b6040805160609490941b6001600160601b031916602080860191909152600293840b60e890811b60348701529290930b90911b60378401528051808403601a018152603a90930181528251928201929092206000908152929052902090565b60608060008361ffff16116140f3576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b86516001600160401b038111801561410a57600080fd5b50604051908082528060200260200182016040528015614134578160200160208202803683370190505b50915086516001600160401b038111801561414e57600080fd5b50604051908082528060200260200182016040528015614178578160200160208202803683370190505b50905060005b87518110156141fe576141a98a8a8a848151811061419857fe5b60200260200101518a8a8a8a613285565b8483815181106141b557fe5b602002602001018484815181106141c857fe5b60200260200101826001600160a01b03166001600160a01b03168152508260060b60060b8152505050808060010191505061417e565b5097509795505050505050565b8060020b8260020b1261424b576040805162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015290519081900360640190fd5b620d89e719600283900b121561428e576040805162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015290519081900360640190fd5b620d89e8600282900b13156142d0576040805162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015290519081900360640190fd5b5050565b6040805160808101825263ffffffff9283168082526000602083018190529282019290925260016060909101819052835463ffffffff1916909117909116600160f81b17909155908190565b60020b600881901d9161010090910790565b600080821161434057600080fd5b600160801b821061435357608091821c91015b600160401b821061436657604091821c91015b600160201b821061437957602091821c91015b62010000821061438b57601091821c91015b610100821061439c57600891821c91015b601082106143ac57600491821c91015b600482106143bc57600291821c91015b60028210612af257600101919050565b60008082116143da57600080fd5b5060ff6001600160801b038216156143f557607f19016143fd565b608082901c91505b6001600160401b0382161561441557603f190161441d565b604082901c91505b63ffffffff82161561443257601f190161443a565b602082901c91505b61ffff82161561444d57600f1901614455565b601082901c91505b60ff821615614467576007190161446f565b600882901c91505b600f8216156144815760031901614489565b600482901c91505b600382161561449b57600119016144a3565b600282901c91505b6001821615612af25760001901919050565b6000836001600160a01b0316856001600160a01b031611156144d5579293925b81614502576144fd836001600160801b03168686036001600160a01b0316600160601b6131d5565b614525565b614525836001600160801b03168686036001600160a01b0316600160601b61401a565b90505b949350505050565b6000836001600160a01b0316856001600160a01b03161115614550579293925b600160601b600160e01b03606084901b166001600160a01b03868603811690871661457a57600080fd5b836145aa57866001600160a01b031661459d8383896001600160a01b03166131d5565b816145a457fe5b046145d0565b6145d06145c18383896001600160a01b031661401a565b886001600160a01b0316614b38565b979650505050505050565b600080856001600160a01b0316116145f257600080fd5b6000846001600160801b03161161460857600080fd5b8161461a576144fd8585856001614b43565b6145258585856001614c24565b600080856001600160a01b03161161463e57600080fd5b6000846001600160801b03161161465457600080fd5b81614666576144fd8585856000614c24565b6145258585856000614b43565b61467b615444565b600085600001518503905060405180608001604052808663ffffffff1681526020018263ffffffff168660020b0288602001510160060b81526020016000856001600160801b0316116146cf5760016146d1565b845b6001600160801b031663ffffffff60801b608085901b16816146ef57fe5b048860400151016001600160a01b0316815260200160011515815250915050949350505050565b61471e615444565b614726615444565b888561ffff1661ffff811061473757fe5b60408051608081018252919092015463ffffffff8116808352600160201b8204600690810b810b900b6020840152600160581b82046001600160a01b031693830193909352600160f81b900460ff1615156060820152925061479b90899089614d07565b156147d3578663ffffffff16826000015163ffffffff1614156147bd5761340b565b816147ca83898988614673565b9150915061340b565b888361ffff168660010161ffff16816147e857fe5b0661ffff1661ffff81106147f857fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b909104161515606082018190529092506148ad57604080516080810182528a5463ffffffff81168252600160201b8104600690810b810b900b6020830152600160581b81046001600160a01b031692820192909252600160f81b90910460ff161515606082015291505b6148bc88836000015189614d07565b6148f3576040805162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015290519081900360640190fd5b6149008989898887614dc8565b9150915097509795505050505050565b600061491f6007878787614054565b60015460025491925090600080600f87900b15614a65576000614940612b2e565b600080546004549293509091829161498a9160089186918591600160a01b810460020b9161ffff600160b81b83048116926001600160801b0390921691600160c81b900416613285565b90925090506149c460058d8b8d8b8b87898b60007f0000000000000000000000000000000000000000000000000000000000000000614f66565b94506149fb60058c8b8d8b8b87898b60017f0000000000000000000000000000000000000000000000000000000000000000614f66565b93508415614a2f57614a2f60068d7f000000000000000000000000000000000000000000000000000000000000000061511f565b8315614a6157614a6160068c7f000000000000000000000000000000000000000000000000000000000000000061511f565b5050505b600080614a7760058c8c8b8a8a615185565b9092509050614a88878a8484615231565b600089600f0b1215614ab6578315614aa557614aa560058c6153c6565b8215614ab657614ab660058b6153c6565b50505050505095945050505050565b60008082600f0b12614aeb57614ae6614ae18585856001614530565b61318d565b614528565b614afe614ae18585856000036000614530565b600003949350505050565b60008082600f0b12614b2557614ae6614ae185858560016144b5565b614afe614ae185858560000360006144b5565b808204910615150190565b60008115614bb65760006001600160a01b03841115614b7957614b7484600160601b876001600160801b03166131d5565b614b91565b6001600160801b038516606085901b81614b8f57fe5b045b9050614bae614ba96001600160a01b03881683613c7e565b6153f2565b915050614528565b60006001600160a01b03841115614be457614bdf84600160601b876001600160801b031661401a565b614bfb565b614bfb606085901b6001600160801b038716614b38565b905080866001600160a01b031611614c1257600080fd5b6001600160a01b038616039050614528565b600082614c32575083614528565b600160601b600160e01b03606085901b168215614cc0576001600160a01b03861684810290858281614c6057fe5b041415614c9157818101828110614c8f57614c8583896001600160a01b03168361401a565b9350505050614528565b505b614cb782614cb2878a6001600160a01b03168681614cab57fe5b0490613c7e565b614b38565b92505050614528565b6001600160a01b03861684810290858281614cd757fe5b04148015614ce457508082115b614ced57600080fd5b808203614c85614ba9846001600160a01b038b168461401a565b60008363ffffffff168363ffffffff1611158015614d3157508363ffffffff168263ffffffff1611155b15614d4d578163ffffffff168363ffffffff161115905061327e565b60008463ffffffff168463ffffffff1611614d74578363ffffffff16600160201b01614d7c565b8363ffffffff165b64ffffffffff16905060008563ffffffff168463ffffffff1611614dac578363ffffffff16600160201b01614db4565b8363ffffffff165b64ffffffffff169091111595945050505050565b614dd0615444565b614dd8615444565b60008361ffff168560010161ffff1681614dee57fe5b0661ffff169050600060018561ffff16830103905060005b506002818301048961ffff87168281614e1b57fe5b0661ffff8110614e2757fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201819052909550614e9157806001019250614e06565b898661ffff168260010181614ea257fe5b0661ffff8110614eae57fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201528551909450600090614f18908b908b614d07565b9050808015614f315750614f318a8a8760000151614d07565b15614f3c5750614f59565b80614f4c57600182039250614f53565b8160010193505b50614e06565b5050509550959350505050565b60028a810b900b600090815260208c90526040812080546001600160801b031682614f91828d6134d1565b9050846001600160801b0316816001600160801b03161115614fdf576040805162461bcd60e51b81526020600482015260026024820152614c4f60f01b604482015290519081900360640190fd5b6001600160801b038281161590821615811415945015615084578c60020b8e60020b1361506c57600183018b9055600283018a9055600383018054600160381b600160d81b031916600160381b6001600160a01b038c16021766ffffffffffffff191666ffffffffffffff60068b900b161763ffffffff60d81b1916600160d81b63ffffffff8a16021790555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b038216178355856150cd5782546150c8906150c390600160801b9004600f90810b810b908f900b6131bf565b613dc9565b6150ee565b82546150ee906150c390600160801b9004600f90810b810b908f900b6131a3565b8354600f9190910b6001600160801b03908116600160801b0291161790925550909c9b505050505050505050505050565b8060020b8260020b8161512e57fe5b0760020b1561513c57600080fd5b6000806151578360020b8560020b8161515157fe5b05614320565b600191820b820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600285810b80820b60009081526020899052604080822088850b850b83529082209193849391929184918291908a900b126151cb575050600182015460028301546151de565b8360010154880391508360020154870390505b6000808b60020b8b60020b121561520057505060018301546002840154615213565b84600101548a0391508460020154890390505b92909803979097039b96909503949094039850939650505050505050565b6040805160a08101825285546001600160801b0390811682526001870154602083015260028701549282019290925260038601548083166060830152600160801b900490911660808201526000600f85900b6152d05781516001600160801b03166152c8576040805162461bcd60e51b815260206004820152600260248201526104e560f41b604482015290519081900360640190fd5b5080516152df565b81516152dc90866134d1565b90505b60006153038360200151860384600001516001600160801b0316600160801b6131d5565b905060006153298460400151860385600001516001600160801b0316600160801b6131d5565b905086600f0b6000146153505787546001600160801b0319166001600160801b0384161788555b60018801869055600288018590556001600160801b03821615158061537e57506000816001600160801b0316115b156153bc576003880180546001600160801b031981166001600160801b039182168501821617808216600160801b9182900483168501909216021790555b5050505050505050565b600290810b810b6000908152602092909252604082208281556001810183905590810182905560030155565b806001600160a01b0381168114612af257600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fea2646970667358221220973322e6fab6821c8a0c6c9b053d753a3802932c8e5afcd22a3bbcdaa5704a5f64736f6c63430007060033a264697066735822122069aac2091c002513185726155a7a2566bf6ba191b9af3ba489c164f11d94d5ed64736f6c63430007060033",
  "immutableReferences": {
    "38": [
      {
        "length": 32,
        "start": 1138
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2736:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:34"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:34",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:34",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:34"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:34"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:34"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:34",
                "type": ""
              }
            ],
            "src": "14:175:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "244:113:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "254:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "276:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "263:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "263:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "254:5:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "335:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "344:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "337:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "337:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "337:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "305:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "316:5:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "323:8:34",
                                "type": "",
                                "value": "0xffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "312:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "312:20:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "302:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:31:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "295:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "295:39:34"
                  },
                  "nodeType": "YulIf",
                  "src": "292:2:34"
                }
              ]
            },
            "name": "abi_decode_t_uint24",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "223:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "234:5:34",
                "type": ""
              }
            ],
            "src": "194:163:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "432:128:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "478:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "487:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "495:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "480:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "480:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "480:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "453:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "462:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "449:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "449:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "474:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "445:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "442:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "513:41:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "544:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "523:20:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:31:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "398:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "409:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "421:6:34",
                "type": ""
              }
            ],
            "src": "362:198:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:245:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "714:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "723:6:34"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "731:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "716:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "716:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "716:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "689:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "698:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "685:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "685:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "710:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "681:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "678:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "749:41:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "780:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "759:20:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "759:31:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "749:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "799:50:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "834:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "845:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "830:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "830:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "809:20:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "809:40:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "799:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "858:49:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "892:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "903:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "888:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "888:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_uint24",
                      "nodeType": "YulIdentifier",
                      "src": "868:19:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "868:39:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "858:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint24",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "618:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "629:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "641:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "649:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "657:6:34",
                "type": ""
              }
            ],
            "src": "565:348:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "987:127:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1033:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1042:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1050:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1035:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1035:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1035:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1008:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1017:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1004:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1004:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1029:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1000:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "997:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1068:40:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1098:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_uint24",
                      "nodeType": "YulIdentifier",
                      "src": "1078:19:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:30:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1068:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint24",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "953:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "964:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "976:6:34",
                "type": ""
              }
            ],
            "src": "918:196:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1203:283:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1249:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1258:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1266:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1251:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1251:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1251:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1224:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1233:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1220:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1220:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1216:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1216:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1213:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1284:40:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1314:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_uint24",
                      "nodeType": "YulIdentifier",
                      "src": "1294:19:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1294:30:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1284:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1333:45:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1363:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1374:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1346:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:32:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1337:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1430:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1439:6:34"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1447:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1432:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1432:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1432:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1400:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1418:1:34",
                                "type": "",
                                "value": "2"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1421:5:34"
                              }
                            ],
                            "functionName": {
                              "name": "signextend",
                              "nodeType": "YulIdentifier",
                              "src": "1407:10:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1407:20:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1397:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1397:31:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1390:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1390:39:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1387:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1465:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1475:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1465:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint24t_int24",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1161:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1172:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1184:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1192:6:34",
                "type": ""
              }
            ],
            "src": "1119:367:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1592:102:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1602:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1614:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1625:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1610:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1610:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1602:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1644:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1659:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1675:3:34",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1680:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1671:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1671:11:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1684:1:34",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1667:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1667:19:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1655:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1655:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1637:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1637:51:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1637:51:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1561:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1572:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1583:4:34",
                "type": ""
              }
            ],
            "src": "1491:203:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1906:345:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1916:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1928:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1939:3:34",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1924:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1924:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1916:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1952:29:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1970:3:34",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1975:1:34",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1966:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1966:11:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1979:1:34",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1962:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1962:19:34"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1956:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1997:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2012:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2020:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2008:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2008:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1990:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1990:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1990:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2044:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2055:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2040:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2040:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2064:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2072:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2060:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2060:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2033:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2033:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2096:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2107:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2092:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2092:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2116:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2124:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2112:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2112:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2085:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2085:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2085:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2148:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2159:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2144:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2144:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "2168:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2176:8:34",
                            "type": "",
                            "value": "0xffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2164:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2164:21:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2137:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:49:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2137:49:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2206:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2217:3:34",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2202:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2202:19:34"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2234:1:34",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "2237:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "signextend",
                          "nodeType": "YulIdentifier",
                          "src": "2223:10:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2223:21:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2195:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2195:50:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2195:50:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint24_t_int24__to_t_address_t_address_t_address_t_uint24_t_int24__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1843:9:34",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1854:6:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1862:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1870:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1878:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1886:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1897:4:34",
                "type": ""
              }
            ],
            "src": "1699:552:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2353:91:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2363:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2375:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2386:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2371:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2371:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2363:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2405:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2427:1:34",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2430:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "signextend",
                          "nodeType": "YulIdentifier",
                          "src": "2416:10:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2416:21:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2398:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2398:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2398:40:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2322:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2333:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2344:4:34",
                "type": ""
              }
            ],
            "src": "2256:188:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2574:160:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2584:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2596:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2607:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2592:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2592:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2584:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2626:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2648:1:34",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2651:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "signextend",
                          "nodeType": "YulIdentifier",
                          "src": "2637:10:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2637:21:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2619:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2619:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2619:40:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2679:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2690:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2675:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2675:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2699:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2715:3:34",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2720:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2711:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2711:11:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2724:1:34",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2707:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2707:19:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2695:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2695:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2668:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2668:60:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2668:60:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int24_t_address__to_t_int24_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2535:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2546:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2554:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2565:4:34",
                "type": ""
              }
            ],
            "src": "2449:285:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint24(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint24(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := abi_decode_t_uint24(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint24(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_uint24(headStart)\n    }\n    function abi_decode_tuple_t_uint24t_int24(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_uint24(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, signextend(2, value))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint24_t_int24__to_t_address_t_address_t_address_t_uint24_t_int24__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xffffff))\n        mstore(add(headStart, 128), signextend(2, value4))\n    }\n    function abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(2, value0))\n    }\n    function abi_encode_tuple_t_int24_t_address__to_t_int24_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, signextend(2, value0))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "364:2503:2:-:0;;;770:349;;;;;;;;;-1:-1:-1;591:4:1;572:24;;;;794:5:2;:18;;-1:-1:-1;;;;;;794:18:2;802:10;794:18;;;;;;827:36;;794:5;;827:36;;794:5;;827:36;895:3;874:25;;;;:20;:25;;;:30;;-1:-1:-1;;874:30:2;902:2;874:30;;;;;;:25;919;902:2;;895:3;-1:-1:-1;;;;;;;;;;;919:25:2;;975:4;954:26;;;;:20;:26;;;:31;;-1:-1:-1;;954:31:2;983:2;954:31;;;;;;:26;1000;983:2;;975:4;-1:-1:-1;;;;;;;;;;;1000:26:2;;1057:5;1036:27;;;;:20;:27;;;:33;;-1:-1:-1;;1036:33:2;1066:3;1036:33;;;;;;:27;1084:28;1066:3;;1057:5;-1:-1:-1;;;;;;;;;;;1084:28:2;;364:2503;;;;;;;;;;;",
  "deployedSourceMap": "364:2503:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2028:163;;;;;;:::i;:::-;;:::i;:::-;;673:90;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;568:61;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;401:37:4:-;;;:::i;:::-;;;;;;;;;;;:::i;2235:630:2:-;;;;;;:::i;:::-;;:::i;494:29::-;;;:::i;1163:821::-;;;;;;:::i;:::-;;:::i;2028:163::-;2112:5;;-1:-1:-1;;;;;2112:5:2;2098:10;:19;2090:28;;;;;;2146:5;;2133:27;;-1:-1:-1;;;;;2133:27:2;;;;2146:5;;2133:27;;2146:5;;2133:27;2170:5;:14;;-1:-1:-1;;;;;;2170:14:2;-1:-1:-1;;;;;2170:14:2;;;;;;;;;;2028:163::o;673:90::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;673:90:2;;:::o;568:61::-;;;;;;;;;;;;;;;:::o;401:37:4:-;;;;;;;;-1:-1:-1;;;;;401:37:4;;;;;;;;;;;;-1:-1:-1;;;401:37:4;;;;-1:-1:-1;;;401:37:4;;;;;:::o;2235:630:2:-;2339:5;;-1:-1:-1;;;;;2339:5:2;2325:10;:19;2317:28;;;;;;2369:7;2363:3;:13;;;2355:22;;;;;;2685:1;2671:11;:15;;;:38;;;;;2704:5;2690:11;:19;;;2671:38;2663:47;;;;;;2728:25;;;;;;;:20;:25;;;;;;;;;;:30;;;2720:39;;;;;;2770:25;;;;;;;;:20;:25;;;;;;:39;;-1:-1:-1;;2770:39:2;;;;;;;;;;;2824:34;;;2770:25;2824:34;2235:630;;:::o;494:29::-;;;-1:-1:-1;;;;;494:29:2;;:::o;1163:821::-;1299:12;1036:22:1;:20;:22::i;:::-;1341:6:2::1;-1:-1:-1::0;;;;;1331:16:2::1;:6;-1:-1:-1::0;;;;;1331:16:2::1;;;1323:25;;;::::0;::::1;;1359:14;1375::::0;1402:6:::1;-1:-1:-1::0;;;;;1393:15:2::1;:6;-1:-1:-1::0;;;;;1393:15:2::1;;:53;;1431:6;1439;1393:53;;;1412:6;1420;1393:53;1358:88:::0;;-1:-1:-1;1358:88:2;-1:-1:-1;;;;;;1464:20:2;::::1;1456:29;;;::::0;::::1;;1515:25;::::0;::::1;1495:17;1515:25:::0;;;:20:::1;:25;::::0;;;;;::::1;::::0;;::::1;::::0;1558:16;;::::1;1550:25;;;::::0;::::1;;-1:-1:-1::0;;;;;1593:15:2;;::::1;1633:1;1593:15:::0;;;:7:::1;:15;::::0;;;;;;;:23;;::::1;::::0;;;;;;;:28:::1;::::0;::::1;::::0;;;;;;;;::::1;:42:::0;1585:51:::1;;;::::0;::::1;;1653:55;1668:4;1675:6;1683;1691:3;1696:11;1653:6;:55::i;:::-;-1:-1:-1::0;;;;;1718:15:2;;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;:23;;::::1;::::0;;;;;;;;;:28:::1;::::0;::::1;::::0;;;;;;;;;:35;;;;::::1;-1:-1:-1::0;;;;;;1718:35:2;;::::1;::::0;::::1;::::0;;;1876:15;;;;;;;;;:23;;;;;;;;:28;;;;;;;;;;:35;;;;::::1;::::0;;::::1;::::0;;;1926:51;1646:62;;-1:-1:-1;1718:28:2;;1926:51:::1;::::0;::::1;::::0;1959:11;;1646:62;;1926:51:::1;:::i;:::-;;;;;;;;1068:1:1;;;1163:821:2::0;;;;;:::o;835:96:1:-;906:4;-1:-1:-1;;;;;915:8:1;898:25;;890:34;;;;;;835:96::o;981:424:4:-;1178:98;;;;;;;;-1:-1:-1;;;;;1178:98:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1165:111:4;;-1:-1:-1;;;;;;1165:111:4;;;;;;;;-1:-1:-1;1165:111:4;;;;;;;;;;;;;;;-1:-1:-1;;;;1165:111:4;-1:-1:-1;;;1165:111:4;;;-1:-1:-1;;;;1165:111:4;-1:-1:-1;;;1165:111:4;;;;;;;;;;;;;;1335:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1325:42;;;;;;;;;;-1:-1:-1;;1301:69:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1388:10:4;1381:17;;-1:-1:-1;;;;;;1381:17:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1381:17:4;;;1286:85;981:424;-1:-1:-1;;;;;;981:424:4:o;-1:-1:-1:-;;;;;;;;:::o;14:175:34:-;84:20;;-1:-1:-1;;;;;133:31:34;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:163::-;263:20;;323:8;312:20;;302:31;;292:2;;347:1;344;337:12;362:198;;474:2;462:9;453:7;449:23;445:32;442:2;;;495:6;487;480:22;442:2;523:31;544:9;523:31;:::i;:::-;513:41;432:128;-1:-1:-1;;;432:128:34:o;565:348::-;;;;710:2;698:9;689:7;685:23;681:32;678:2;;;731:6;723;716:22;678:2;759:31;780:9;759:31;:::i;:::-;749:41;;809:40;845:2;834:9;830:18;809:40;:::i;:::-;799:50;;868:39;903:2;892:9;888:18;868:39;:::i;:::-;858:49;;668:245;;;;;:::o;918:196::-;;1029:2;1017:9;1008:7;1004:23;1000:32;997:2;;;1050:6;1042;1035:22;997:2;1078:30;1098:9;1078:30;:::i;1119:367::-;;;1245:2;1233:9;1224:7;1220:23;1216:32;1213:2;;;1266:6;1258;1251:22;1213:2;1294:30;1314:9;1294:30;:::i;:::-;1284:40;;1374:2;1363:9;1359:18;1346:32;1421:5;1418:1;1407:20;1400:5;1397:31;1387:2;;1447:6;1439;1432:22;1387:2;1475:5;1465:15;;;1203:283;;;;;:::o;1491:203::-;-1:-1:-1;;;;;1655:32:34;;;;1637:51;;1625:2;1610:18;;1592:102::o;1699:552::-;-1:-1:-1;;;;;2008:15:34;;;1990:34;;2060:15;;;2055:2;2040:18;;2033:43;2112:15;;;;2107:2;2092:18;;2085:43;2176:8;2164:21;;;2159:2;2144:18;;2137:49;2234:1;2223:21;;;;2217:3;2202:19;;2195:50;1939:3;1924:19;;1906:345::o;2256:188::-;2427:1;2416:21;;;;2398:40;;2386:2;2371:18;;2353:91::o;2449:285::-;2648:1;2637:21;;;;2619:40;;-1:-1:-1;;;;;2695:32:34;2690:2;2675:18;;2668:60;2607:2;2592:18;;2574:160::o",
  "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport './interfaces/IUniswapV3Factory.sol';\n\nimport './UniswapV3PoolDeployer.sol';\nimport './NoDelegateCall.sol';\n\nimport './UniswapV3Pool.sol';\n\n/// @title Canonical Uniswap V3 factory\n/// @notice Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees\ncontract UniswapV3Factory is IUniswapV3Factory, UniswapV3PoolDeployer, NoDelegateCall {\n    /// @inheritdoc IUniswapV3Factory\n    address public override owner;\n\n    /// @inheritdoc IUniswapV3Factory\n    mapping(uint24 => int24) public override feeAmountTickSpacing;\n    /// @inheritdoc IUniswapV3Factory\n    mapping(address => mapping(address => mapping(uint24 => address))) public override getPool;\n\n    constructor() {\n        owner = msg.sender;\n        emit OwnerChanged(address(0), msg.sender);\n\n        feeAmountTickSpacing[500] = 10;\n        emit FeeAmountEnabled(500, 10);\n        feeAmountTickSpacing[3000] = 60;\n        emit FeeAmountEnabled(3000, 60);\n        feeAmountTickSpacing[10000] = 200;\n        emit FeeAmountEnabled(10000, 200);\n    }\n\n    /// @inheritdoc IUniswapV3Factory\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external override noDelegateCall returns (address pool) {\n        require(tokenA != tokenB);\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0));\n        int24 tickSpacing = feeAmountTickSpacing[fee];\n        require(tickSpacing != 0);\n        require(getPool[token0][token1][fee] == address(0));\n        pool = deploy(address(this), token0, token1, fee, tickSpacing);\n        getPool[token0][token1][fee] = pool;\n        // populate mapping in the reverse direction, deliberate choice to avoid the cost of comparing addresses\n        getPool[token1][token0][fee] = pool;\n        emit PoolCreated(token0, token1, fee, tickSpacing, pool);\n    }\n\n    /// @inheritdoc IUniswapV3Factory\n    function setOwner(address _owner) external override {\n        require(msg.sender == owner);\n        emit OwnerChanged(owner, _owner);\n        owner = _owner;\n    }\n\n    /// @inheritdoc IUniswapV3Factory\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) public override {\n        require(msg.sender == owner);\n        require(fee < 1000000);\n        // tick spacing is capped at 16384 to prevent the situation where tickSpacing is so large that\n        // TickBitmap#nextInitializedTickWithinOneWord overflows int24 container from a valid tick\n        // 16384 ticks represents a >5x price change with ticks of 1 bips\n        require(tickSpacing > 0 && tickSpacing < 16384);\n        require(feeAmountTickSpacing[fee] == 0);\n\n        feeAmountTickSpacing[fee] = tickSpacing;\n        emit FeeAmountEnabled(fee, tickSpacing);\n    }\n}\n",
  "sourcePath": "/home/gtbc/blockchain/ethereum/uniswap/v3-core/contracts/UniswapV3Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/UniswapV3Factory.sol",
    "exportedSymbols": {
      "BitMath": [
        3834
      ],
      "FixedPoint128": [
        3841
      ],
      "FixedPoint96": [
        3851
      ],
      "FullMath": [
        4024
      ],
      "IERC20Minimal": [
        2970
      ],
      "IUniswapV3Factory": [
        3053
      ],
      "IUniswapV3FlashCallback": [
        3107
      ],
      "IUniswapV3MintCallback": [
        3121
      ],
      "IUniswapV3Pool": [
        3075
      ],
      "IUniswapV3PoolActions": [
        3231
      ],
      "IUniswapV3PoolDeployer": [
        3093
      ],
      "IUniswapV3PoolDerivedState": [
        3262
      ],
      "IUniswapV3PoolEvents": [
        3381
      ],
      "IUniswapV3PoolImmutables": [
        3421
      ],
      "IUniswapV3PoolOwnerActions": [
        3447
      ],
      "IUniswapV3PoolState": [
        3555
      ],
      "IUniswapV3SwapCallback": [
        3135
      ],
      "LiquidityMath": [
        4076
      ],
      "LowGasSafeMath": [
        4206
      ],
      "NoDelegateCall": [
        72
      ],
      "Oracle": [
        4941
      ],
      "Position": [
        5114
      ],
      "SafeCast": [
        5184
      ],
      "SqrtPriceMath": [
        5700
      ],
      "SwapMath": [
        5961
      ],
      "Tick": [
        6413
      ],
      "TickBitmap": [
        6669
      ],
      "TickMath": [
        7204
      ],
      "TransferHelper": [
        7255
      ],
      "UniswapV3Factory": [
        348
      ],
      "UniswapV3Pool": [
        2828
      ],
      "UniswapV3PoolDeployer": [
        2898
      ],
      "UnsafeMath": [
        7271
      ]
    },
    "id": 349,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 74,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:2"
      },
      {
        "id": 75,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "61:19:2"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IUniswapV3Factory.sol",
        "file": "./interfaces/IUniswapV3Factory.sol",
        "id": 76,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 3054,
        "src": "82:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/UniswapV3PoolDeployer.sol",
        "file": "./UniswapV3PoolDeployer.sol",
        "id": 77,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 2899,
        "src": "128:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NoDelegateCall.sol",
        "file": "./NoDelegateCall.sol",
        "id": 78,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 73,
        "src": "166:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/UniswapV3Pool.sol",
        "file": "./UniswapV3Pool.sol",
        "id": 79,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 2829,
        "src": "198:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 81,
              "name": "IUniswapV3Factory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3053,
              "src": "393:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$3053",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "id": 82,
            "nodeType": "InheritanceSpecifier",
            "src": "393:17:2"
          },
          {
            "baseName": {
              "id": 83,
              "name": "UniswapV3PoolDeployer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2898,
              "src": "412:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UniswapV3PoolDeployer_$2898",
                "typeString": "contract UniswapV3PoolDeployer"
              }
            },
            "id": 84,
            "nodeType": "InheritanceSpecifier",
            "src": "412:21:2"
          },
          {
            "baseName": {
              "id": 85,
              "name": "NoDelegateCall",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 72,
              "src": "435:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NoDelegateCall_$72",
                "typeString": "contract NoDelegateCall"
              }
            },
            "id": 86,
            "nodeType": "InheritanceSpecifier",
            "src": "435:14:2"
          }
        ],
        "contractDependencies": [
          72,
          2898,
          3053,
          3093
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 80,
          "nodeType": "StructuredDocumentation",
          "src": "229:135:2",
          "text": "@title Canonical Uniswap V3 factory\n @notice Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees"
        },
        "fullyImplemented": true,
        "id": 348,
        "linearizedBaseContracts": [
          348,
          72,
          2898,
          3093,
          3053
        ],
        "name": "UniswapV3Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3006
            ],
            "constant": false,
            "documentation": {
              "id": 87,
              "nodeType": "StructuredDocumentation",
              "src": "456:33:2",
              "text": "@inheritdoc IUniswapV3Factory"
            },
            "functionSelector": "8da5cb5b",
            "id": 90,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 89,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "509:8:2"
            },
            "scope": 348,
            "src": "494:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 88,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "494:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3014
            ],
            "constant": false,
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "530:33:2",
              "text": "@inheritdoc IUniswapV3Factory"
            },
            "functionSelector": "22afcccb",
            "id": 96,
            "mutability": "mutable",
            "name": "feeAmountTickSpacing",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 95,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "600:8:2"
            },
            "scope": 348,
            "src": "568:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint24_$_t_int24_$",
              "typeString": "mapping(uint24 => int24)"
            },
            "typeName": {
              "id": 94,
              "keyType": {
                "id": 92,
                "name": "uint24",
                "nodeType": "ElementaryTypeName",
                "src": "576:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                }
              },
              "nodeType": "Mapping",
              "src": "568:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint24_$_t_int24_$",
                "typeString": "mapping(uint24 => int24)"
              },
              "valueType": {
                "id": 93,
                "name": "int24",
                "nodeType": "ElementaryTypeName",
                "src": "586:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3026
            ],
            "constant": false,
            "documentation": {
              "id": 97,
              "nodeType": "StructuredDocumentation",
              "src": "635:33:2",
              "text": "@inheritdoc IUniswapV3Factory"
            },
            "functionSelector": "1698ee82",
            "id": 106,
            "mutability": "mutable",
            "name": "getPool",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 105,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "747:8:2"
            },
            "scope": 348,
            "src": "673:90:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint24_$_t_address_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(uint24 => address)))"
            },
            "typeName": {
              "id": 104,
              "keyType": {
                "id": 98,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "681:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "673:66:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint24_$_t_address_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(uint24 => address)))"
              },
              "valueType": {
                "id": 103,
                "keyType": {
                  "id": 99,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "700:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "692:46:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint24_$_t_address_$_$",
                  "typeString": "mapping(address => mapping(uint24 => address))"
                },
                "valueType": {
                  "id": 102,
                  "keyType": {
                    "id": 100,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "711:26:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint24_$_t_address_$",
                    "typeString": "mapping(uint24 => address)"
                  },
                  "valueType": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "784:335:2",
              "statements": [
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "794:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 110,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "802:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "802:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "794:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "794:18:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "848:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "840:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "840:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "840:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "852:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "852:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 114,
                      "name": "OwnerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2980,
                      "src": "827:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "827:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "EmitStatement",
                  "src": "822:41:2"
                },
                {
                  "expression": {
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 123,
                        "name": "feeAmountTickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "874:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint24_$_t_int24_$",
                          "typeString": "mapping(uint24 => int24)"
                        }
                      },
                      "id": 125,
                      "indexExpression": {
                        "hexValue": "353030",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "895:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        "value": "500"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "874:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "902:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "874:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "874:30:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "353030",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "936:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        "value": "500"
                      },
                      {
                        "hexValue": "3130",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "941:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 129,
                      "name": "FeeAmountEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3000,
                      "src": "919:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint24_$_t_int24_$returns$__$",
                        "typeString": "function (uint24,int24)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "919:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "EmitStatement",
                  "src": "914:30:2"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 134,
                        "name": "feeAmountTickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "954:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint24_$_t_int24_$",
                          "typeString": "mapping(uint24 => int24)"
                        }
                      },
                      "id": 136,
                      "indexExpression": {
                        "hexValue": "33303030",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "975:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "954:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3630",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "983:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_60_by_1",
                        "typeString": "int_const 60"
                      },
                      "value": "60"
                    },
                    "src": "954:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "954:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "33303030",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1017:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "hexValue": "3630",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1023:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        }
                      ],
                      "id": 140,
                      "name": "FeeAmountEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3000,
                      "src": "1000:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint24_$_t_int24_$returns$__$",
                        "typeString": "function (uint24,int24)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "EmitStatement",
                  "src": "995:31:2"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 145,
                        "name": "feeAmountTickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1036:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint24_$_t_int24_$",
                          "typeString": "mapping(uint24 => int24)"
                        }
                      },
                      "id": 147,
                      "indexExpression": {
                        "hexValue": "3130303030",
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1057:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1036:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "323030",
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1066:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "1036:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:33:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "3130303030",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1101:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      {
                        "hexValue": "323030",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1108:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "id": 151,
                      "name": "FeeAmountEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3000,
                      "src": "1084:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint24_$_t_int24_$returns$__$",
                        "typeString": "function (uint24,int24)"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "EmitStatement",
                  "src": "1079:33:2"
                }
              ]
            },
            "id": 157,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "781:2:2"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:2"
            },
            "scope": 348,
            "src": "770:349:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3038
            ],
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "1313:671:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 173,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "1331:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 174,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "1341:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1331:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1323:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1323:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:25:2"
                },
                {
                  "assignments": [
                    179,
                    181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "1359:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1359:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 181,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "1375:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 180,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1375:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 192,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 182,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "1393:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 183,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "1402:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1393:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 188,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "1431:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 189,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "1439:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 190,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1430:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1393:53:2",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 185,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "1412:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 186,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "1420:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 187,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1411:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1358:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 194,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "1464:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1482:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1474:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1474:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1474:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1464:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1456:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1456:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:29:2"
                },
                {
                  "assignments": [
                    203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 203,
                      "mutability": "mutable",
                      "name": "tickSpacing",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "1495:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 202,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1495:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "baseExpression": {
                      "id": 204,
                      "name": "feeAmountTickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "1515:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint24_$_t_int24_$",
                        "typeString": "mapping(uint24 => int24)"
                      }
                    },
                    "id": 206,
                    "indexExpression": {
                      "id": 205,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "1536:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1515:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1495:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 209,
                          "name": "tickSpacing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "1558:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1573:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1558:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1550:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:25:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 215,
                                "name": "getPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 106,
                                "src": "1593:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint24_$_t_address_$_$_$",
                                  "typeString": "mapping(address => mapping(address => mapping(uint24 => address)))"
                                }
                              },
                              "id": 217,
                              "indexExpression": {
                                "id": 216,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 179,
                                "src": "1601:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1593:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint24_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(uint24 => address))"
                              }
                            },
                            "id": 219,
                            "indexExpression": {
                              "id": 218,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "1609:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1593:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint24_$_t_address_$",
                              "typeString": "mapping(uint24 => address)"
                            }
                          },
                          "id": 221,
                          "indexExpression": {
                            "id": 220,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "1617:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1593:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1633:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1625:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 222,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1625:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1625:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1593:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1585:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "1585:51:2"
                },
                {
                  "expression": {
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 229,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "1646:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 233,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1668:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UniswapV3Factory_$348",
                                "typeString": "contract UniswapV3Factory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_UniswapV3Factory_$348",
                                "typeString": "contract UniswapV3Factory"
                              }
                            ],
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1660:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 231,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1660:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1660:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 235,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "1675:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 236,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "1683:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 237,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "1691:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "id": 238,
                          "name": "tickSpacing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "1696:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 230,
                        "name": "deploy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2897,
                        "src": "1653:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$returns$_t_address_$",
                          "typeString": "function (address,address,address,uint24,int24) returns (address)"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1653:55:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1646:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:62:2"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 242,
                            "name": "getPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "1718:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint24_$_t_address_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint24 => address)))"
                            }
                          },
                          "id": 246,
                          "indexExpression": {
                            "id": 243,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "1726:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1718:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint24_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(uint24 => address))"
                          }
                        },
                        "id": 247,
                        "indexExpression": {
                          "id": 244,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "1734:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1718:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint24_$_t_address_$",
                          "typeString": "mapping(uint24 => address)"
                        }
                      },
                      "id": 248,
                      "indexExpression": {
                        "id": 245,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "1742:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1718:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 249,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "1749:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1718:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:35:2"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 252,
                            "name": "getPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "1876:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint24_$_t_address_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint24 => address)))"
                            }
                          },
                          "id": 256,
                          "indexExpression": {
                            "id": 253,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "1884:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1876:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint24_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(uint24 => address))"
                          }
                        },
                        "id": 257,
                        "indexExpression": {
                          "id": 254,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "1892:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1876:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint24_$_t_address_$",
                          "typeString": "mapping(uint24 => address)"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "id": 255,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "1900:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1876:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 259,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "1907:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1876:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "1876:35:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 263,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "1938:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 264,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1946:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 265,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "1954:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 266,
                        "name": "tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "1959:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 267,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "1972:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 262,
                      "name": "PoolCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2993,
                      "src": "1926:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint24,int24,address)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "1921:56:2"
                }
              ]
            },
            "documentation": {
              "id": 158,
              "nodeType": "StructuredDocumentation",
              "src": "1125:33:2",
              "text": "@inheritdoc IUniswapV3Factory"
            },
            "functionSelector": "a1671295",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 168,
                "modifierName": {
                  "id": 167,
                  "name": "noDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 71,
                  "src": "1275:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1275:14:2"
              }
            ],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 166,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1266:8:2"
            },
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "1192:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "1216:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "1240:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1182:74:2"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "1299:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:14:2"
            },
            "scope": 348,
            "src": "1163:821:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3044
            ],
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "2080:111:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 279,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2098:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2098:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 281,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "2112:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2098:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2090:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:28:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "2146:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 287,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "2153:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 285,
                      "name": "OwnerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2980,
                      "src": "2133:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "EmitStatement",
                  "src": "2128:32:2"
                },
                {
                  "expression": {
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 290,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2170:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 291,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 274,
                      "src": "2178:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2170:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:14:2"
                }
              ]
            },
            "documentation": {
              "id": 272,
              "nodeType": "StructuredDocumentation",
              "src": "1990:33:2",
              "text": "@inheritdoc IUniswapV3Factory"
            },
            "functionSelector": "13af4035",
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2071:8:2"
            },
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2046:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2045:16:2"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2080:0:2"
            },
            "scope": 348,
            "src": "2028:163:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3052
            ],
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "2307:558:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 305,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2325:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2325:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 307,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "2339:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2325:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2317:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 312,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2363:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2369:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "2363:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2355:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2355:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:22:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 318,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "2671:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2685:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2671:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 321,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "2690:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3136333834",
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2704:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_16384_by_1",
                              "typeString": "int_const 16384"
                            },
                            "value": "16384"
                          },
                          "src": "2690:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2671:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2663:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2663:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:47:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 328,
                            "name": "feeAmountTickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "2728:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint24_$_t_int24_$",
                              "typeString": "mapping(uint24 => int24)"
                            }
                          },
                          "id": 330,
                          "indexExpression": {
                            "id": 329,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "2749:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2728:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2757:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2728:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2720:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:39:2"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 335,
                        "name": "feeAmountTickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2770:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint24_$_t_int24_$",
                          "typeString": "mapping(uint24 => int24)"
                        }
                      },
                      "id": 337,
                      "indexExpression": {
                        "id": 336,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "2791:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2770:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 338,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "2798:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2770:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:39:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "2841:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 343,
                        "name": "tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "2846:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 341,
                      "name": "FeeAmountEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3000,
                      "src": "2824:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint24_$_t_int24_$returns$__$",
                        "typeString": "function (uint24,int24)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2824:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "EmitStatement",
                  "src": "2819:39:2"
                }
              ]
            },
            "documentation": {
              "id": 296,
              "nodeType": "StructuredDocumentation",
              "src": "2197:33:2",
              "text": "@inheritdoc IUniswapV3Factory"
            },
            "functionSelector": "8a7c195f",
            "id": 347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableFeeAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 302,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2298:8:2"
            },
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "2260:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "tickSpacing",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "2272:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2259:31:2"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2307:0:2"
            },
            "scope": 348,
            "src": "2235:630:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 349,
        "src": "364:2503:2"
      }
    ],
    "src": "37:2831:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/UniswapV3Factory.sol",
      "exportedSymbols": {
        "BitMath": [
          3834
        ],
        "FixedPoint128": [
          3841
        ],
        "FixedPoint96": [
          3851
        ],
        "FullMath": [
          4024
        ],
        "IERC20Minimal": [
          2970
        ],
        "IUniswapV3Factory": [
          3053
        ],
        "IUniswapV3FlashCallback": [
          3107
        ],
        "IUniswapV3MintCallback": [
          3121
        ],
        "IUniswapV3Pool": [
          3075
        ],
        "IUniswapV3PoolActions": [
          3231
        ],
        "IUniswapV3PoolDeployer": [
          3093
        ],
        "IUniswapV3PoolDerivedState": [
          3262
        ],
        "IUniswapV3PoolEvents": [
          3381
        ],
        "IUniswapV3PoolImmutables": [
          3421
        ],
        "IUniswapV3PoolOwnerActions": [
          3447
        ],
        "IUniswapV3PoolState": [
          3555
        ],
        "IUniswapV3SwapCallback": [
          3135
        ],
        "LiquidityMath": [
          4076
        ],
        "LowGasSafeMath": [
          4206
        ],
        "NoDelegateCall": [
          72
        ],
        "Oracle": [
          4941
        ],
        "Position": [
          5114
        ],
        "SafeCast": [
          5184
        ],
        "SqrtPriceMath": [
          5700
        ],
        "SwapMath": [
          5961
        ],
        "Tick": [
          6413
        ],
        "TickBitmap": [
          6669
        ],
        "TickMath": [
          7204
        ],
        "TransferHelper": [
          7255
        ],
        "UniswapV3Factory": [
          348
        ],
        "UniswapV3Pool": [
          2828
        ],
        "UniswapV3PoolDeployer": [
          2898
        ],
        "UnsafeMath": [
          7271
        ]
      },
      "license": "BUSL-1.1"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "=",
            "0.7",
            ".6"
          ]
        },
        "id": 74,
        "name": "PragmaDirective",
        "src": "37:23:2"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 75,
        "name": "PragmaDirective",
        "src": "61:19:2"
      },
      {
        "attributes": {
          "SourceUnit": 3054,
          "absolutePath": "project:/contracts/interfaces/IUniswapV3Factory.sol",
          "file": "./interfaces/IUniswapV3Factory.sol",
          "scope": 349,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 76,
        "name": "ImportDirective",
        "src": "82:44:2"
      },
      {
        "attributes": {
          "SourceUnit": 2899,
          "absolutePath": "project:/contracts/UniswapV3PoolDeployer.sol",
          "file": "./UniswapV3PoolDeployer.sol",
          "scope": 349,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 77,
        "name": "ImportDirective",
        "src": "128:37:2"
      },
      {
        "attributes": {
          "SourceUnit": 73,
          "absolutePath": "project:/contracts/NoDelegateCall.sol",
          "file": "./NoDelegateCall.sol",
          "scope": 349,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 78,
        "name": "ImportDirective",
        "src": "166:30:2"
      },
      {
        "attributes": {
          "SourceUnit": 2829,
          "absolutePath": "project:/contracts/UniswapV3Pool.sol",
          "file": "./UniswapV3Pool.sol",
          "scope": 349,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 79,
        "name": "ImportDirective",
        "src": "198:29:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            72,
            2898,
            3053,
            3093
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            348,
            72,
            2898,
            3093,
            3053
          ],
          "name": "UniswapV3Factory",
          "scope": 349
        },
        "children": [
          {
            "attributes": {
              "text": "@title Canonical Uniswap V3 factory\n @notice Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees"
            },
            "id": 80,
            "name": "StructuredDocumentation",
            "src": "229:135:2"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IUniswapV3Factory",
                  "referencedDeclaration": 3053,
                  "type": "contract IUniswapV3Factory"
                },
                "id": 81,
                "name": "UserDefinedTypeName",
                "src": "393:17:2"
              }
            ],
            "id": 82,
            "name": "InheritanceSpecifier",
            "src": "393:17:2"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "UniswapV3PoolDeployer",
                  "referencedDeclaration": 2898,
                  "type": "contract UniswapV3PoolDeployer"
                },
                "id": 83,
                "name": "UserDefinedTypeName",
                "src": "412:21:2"
              }
            ],
            "id": 84,
            "name": "InheritanceSpecifier",
            "src": "412:21:2"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NoDelegateCall",
                  "referencedDeclaration": 72,
                  "type": "contract NoDelegateCall"
                },
                "id": 85,
                "name": "UserDefinedTypeName",
                "src": "435:14:2"
              }
            ],
            "id": 86,
            "name": "InheritanceSpecifier",
            "src": "435:14:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                3006
              ],
              "constant": false,
              "functionSelector": "8da5cb5b",
              "mutability": "mutable",
              "name": "owner",
              "scope": 348,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 88,
                "name": "ElementaryTypeName",
                "src": "494:7:2"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 89,
                "name": "OverrideSpecifier",
                "src": "509:8:2"
              },
              {
                "attributes": {
                  "text": "@inheritdoc IUniswapV3Factory"
                },
                "id": 87,
                "name": "StructuredDocumentation",
                "src": "456:33:2"
              }
            ],
            "id": 90,
            "name": "VariableDeclaration",
            "src": "494:29:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                3014
              ],
              "constant": false,
              "functionSelector": "22afcccb",
              "mutability": "mutable",
              "name": "feeAmountTickSpacing",
              "scope": 348,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint24 => int24)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint24 => int24)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint24",
                      "type": "uint24"
                    },
                    "id": 92,
                    "name": "ElementaryTypeName",
                    "src": "576:6:2"
                  },
                  {
                    "attributes": {
                      "name": "int24",
                      "type": "int24"
                    },
                    "id": 93,
                    "name": "ElementaryTypeName",
                    "src": "586:5:2"
                  }
                ],
                "id": 94,
                "name": "Mapping",
                "src": "568:24:2"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 95,
                "name": "OverrideSpecifier",
                "src": "600:8:2"
              },
              {
                "attributes": {
                  "text": "@inheritdoc IUniswapV3Factory"
                },
                "id": 91,
                "name": "StructuredDocumentation",
                "src": "530:33:2"
              }
            ],
            "id": 96,
            "name": "VariableDeclaration",
            "src": "568:61:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                3026
              ],
              "constant": false,
              "functionSelector": "1698ee82",
              "mutability": "mutable",
              "name": "getPool",
              "scope": 348,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => mapping(address => mapping(uint24 => address)))",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => mapping(address => mapping(uint24 => address)))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 98,
                    "name": "ElementaryTypeName",
                    "src": "681:7:2"
                  },
                  {
                    "attributes": {
                      "type": "mapping(address => mapping(uint24 => address))"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 99,
                        "name": "ElementaryTypeName",
                        "src": "700:7:2"
                      },
                      {
                        "attributes": {
                          "type": "mapping(uint24 => address)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint24",
                              "type": "uint24"
                            },
                            "id": 100,
                            "name": "ElementaryTypeName",
                            "src": "719:6:2"
                          },
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 101,
                            "name": "ElementaryTypeName",
                            "src": "729:7:2"
                          }
                        ],
                        "id": 102,
                        "name": "Mapping",
                        "src": "711:26:2"
                      }
                    ],
                    "id": 103,
                    "name": "Mapping",
                    "src": "692:46:2"
                  }
                ],
                "id": 104,
                "name": "Mapping",
                "src": "673:66:2"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 105,
                "name": "OverrideSpecifier",
                "src": "747:8:2"
              },
              {
                "attributes": {
                  "text": "@inheritdoc IUniswapV3Factory"
                },
                "id": 97,
                "name": "StructuredDocumentation",
                "src": "635:33:2"
              }
            ],
            "id": 106,
            "name": "VariableDeclaration",
            "src": "673:90:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 348,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 107,
                "name": "ParameterList",
                "src": "781:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 108,
                "name": "ParameterList",
                "src": "784:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 90,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 109,
                            "name": "Identifier",
                            "src": "794:5:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 110,
                                "name": "Identifier",
                                "src": "802:3:2"
                              }
                            ],
                            "id": 111,
                            "name": "MemberAccess",
                            "src": "802:10:2"
                          }
                        ],
                        "id": 112,
                        "name": "Assignment",
                        "src": "794:18:2"
                      }
                    ],
                    "id": 113,
                    "name": "ExpressionStatement",
                    "src": "794:18:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2980,
                              "type": "function (address,address)",
                              "value": "OwnerChanged"
                            },
                            "id": 114,
                            "name": "Identifier",
                            "src": "827:12:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 115,
                                    "name": "ElementaryTypeName",
                                    "src": "840:7:2"
                                  }
                                ],
                                "id": 116,
                                "name": "ElementaryTypeNameExpression",
                                "src": "840:7:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 117,
                                "name": "Literal",
                                "src": "848:1:2"
                              }
                            ],
                            "id": 118,
                            "name": "FunctionCall",
                            "src": "840:10:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 119,
                                "name": "Identifier",
                                "src": "852:3:2"
                              }
                            ],
                            "id": 120,
                            "name": "MemberAccess",
                            "src": "852:10:2"
                          }
                        ],
                        "id": 121,
                        "name": "FunctionCall",
                        "src": "827:36:2"
                      }
                    ],
                    "id": 122,
                    "name": "EmitStatement",
                    "src": "822:41:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "int24"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "int24"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 96,
                                  "type": "mapping(uint24 => int24)",
                                  "value": "feeAmountTickSpacing"
                                },
                                "id": 123,
                                "name": "Identifier",
                                "src": "874:20:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "353030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 500",
                                  "value": "500"
                                },
                                "id": 124,
                                "name": "Literal",
                                "src": "895:3:2"
                              }
                            ],
                            "id": 125,
                            "name": "IndexAccess",
                            "src": "874:25:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 10",
                              "value": "10"
                            },
                            "id": 126,
                            "name": "Literal",
                            "src": "902:2:2"
                          }
                        ],
                        "id": 127,
                        "name": "Assignment",
                        "src": "874:30:2"
                      }
                    ],
                    "id": 128,
                    "name": "ExpressionStatement",
                    "src": "874:30:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_500_by_1",
                                  "typeString": "int_const 500"
                                },
                                {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3000,
                              "type": "function (uint24,int24)",
                              "value": "FeeAmountEnabled"
                            },
                            "id": 129,
                            "name": "Identifier",
                            "src": "919:16:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "353030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 500",
                              "value": "500"
                            },
                            "id": 130,
                            "name": "Literal",
                            "src": "936:3:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 10",
                              "value": "10"
                            },
                            "id": 131,
                            "name": "Literal",
                            "src": "941:2:2"
                          }
                        ],
                        "id": 132,
                        "name": "FunctionCall",
                        "src": "919:25:2"
                      }
                    ],
                    "id": 133,
                    "name": "EmitStatement",
                    "src": "914:30:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "int24"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "int24"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 96,
                                  "type": "mapping(uint24 => int24)",
                                  "value": "feeAmountTickSpacing"
                                },
                                "id": 134,
                                "name": "Identifier",
                                "src": "954:20:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "33303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 3000",
                                  "value": "3000"
                                },
                                "id": 135,
                                "name": "Literal",
                                "src": "975:4:2"
                              }
                            ],
                            "id": 136,
                            "name": "IndexAccess",
                            "src": "954:26:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "3630",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 60",
                              "value": "60"
                            },
                            "id": 137,
                            "name": "Literal",
                            "src": "983:2:2"
                          }
                        ],
                        "id": 138,
                        "name": "Assignment",
                        "src": "954:31:2"
                      }
                    ],
                    "id": 139,
                    "name": "ExpressionStatement",
                    "src": "954:31:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                {
                                  "typeIdentifier": "t_rational_60_by_1",
                                  "typeString": "int_const 60"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3000,
                              "type": "function (uint24,int24)",
                              "value": "FeeAmountEnabled"
                            },
                            "id": 140,
                            "name": "Identifier",
                            "src": "1000:16:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "33303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 3000",
                              "value": "3000"
                            },
                            "id": 141,
                            "name": "Literal",
                            "src": "1017:4:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "3630",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 60",
                              "value": "60"
                            },
                            "id": 142,
                            "name": "Literal",
                            "src": "1023:2:2"
                          }
                        ],
                        "id": 143,
                        "name": "FunctionCall",
                        "src": "1000:26:2"
                      }
                    ],
                    "id": 144,
                    "name": "EmitStatement",
                    "src": "995:31:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "int24"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "int24"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 96,
                                  "type": "mapping(uint24 => int24)",
                                  "value": "feeAmountTickSpacing"
                                },
                                "id": 145,
                                "name": "Identifier",
                                "src": "1036:20:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "3130303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 10000",
                                  "value": "10000"
                                },
                                "id": 146,
                                "name": "Literal",
                                "src": "1057:5:2"
                              }
                            ],
                            "id": 147,
                            "name": "IndexAccess",
                            "src": "1036:27:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "323030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 200",
                              "value": "200"
                            },
                            "id": 148,
                            "name": "Literal",
                            "src": "1066:3:2"
                          }
                        ],
                        "id": 149,
                        "name": "Assignment",
                        "src": "1036:33:2"
                      }
                    ],
                    "id": 150,
                    "name": "ExpressionStatement",
                    "src": "1036:33:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                {
                                  "typeIdentifier": "t_rational_200_by_1",
                                  "typeString": "int_const 200"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3000,
                              "type": "function (uint24,int24)",
                              "value": "FeeAmountEnabled"
                            },
                            "id": 151,
                            "name": "Identifier",
                            "src": "1084:16:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "3130303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 10000",
                              "value": "10000"
                            },
                            "id": 152,
                            "name": "Literal",
                            "src": "1101:5:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "323030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 200",
                              "value": "200"
                            },
                            "id": 153,
                            "name": "Literal",
                            "src": "1108:3:2"
                          }
                        ],
                        "id": 154,
                        "name": "FunctionCall",
                        "src": "1084:28:2"
                      }
                    ],
                    "id": 155,
                    "name": "EmitStatement",
                    "src": "1079:33:2"
                  }
                ],
                "id": 156,
                "name": "Block",
                "src": "784:335:2"
              }
            ],
            "id": 157,
            "name": "FunctionDefinition",
            "src": "770:349:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                3038
              ],
              "functionSelector": "a1671295",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "createPool",
              "scope": 348,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@inheritdoc IUniswapV3Factory"
                },
                "id": 158,
                "name": "StructuredDocumentation",
                "src": "1125:33:2"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 166,
                "name": "OverrideSpecifier",
                "src": "1266:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "scope": 271,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 159,
                        "name": "ElementaryTypeName",
                        "src": "1192:7:2"
                      }
                    ],
                    "id": 160,
                    "name": "VariableDeclaration",
                    "src": "1192:14:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenB",
                      "scope": 271,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 161,
                        "name": "ElementaryTypeName",
                        "src": "1216:7:2"
                      }
                    ],
                    "id": 162,
                    "name": "VariableDeclaration",
                    "src": "1216:14:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "fee",
                      "scope": 271,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint24",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint24",
                          "type": "uint24"
                        },
                        "id": 163,
                        "name": "ElementaryTypeName",
                        "src": "1240:6:2"
                      }
                    ],
                    "id": 164,
                    "name": "VariableDeclaration",
                    "src": "1240:10:2"
                  }
                ],
                "id": 165,
                "name": "ParameterList",
                "src": "1182:74:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "pool",
                      "scope": 271,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 169,
                        "name": "ElementaryTypeName",
                        "src": "1299:7:2"
                      }
                    ],
                    "id": 170,
                    "name": "VariableDeclaration",
                    "src": "1299:12:2"
                  }
                ],
                "id": 171,
                "name": "ParameterList",
                "src": "1298:14:2"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 71,
                      "type": "modifier ()",
                      "value": "noDelegateCall"
                    },
                    "id": 167,
                    "name": "Identifier",
                    "src": "1275:14:2"
                  }
                ],
                "id": 168,
                "name": "ModifierInvocation",
                "src": "1275:14:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 172,
                            "name": "Identifier",
                            "src": "1323:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 160,
                                  "type": "address",
                                  "value": "tokenA"
                                },
                                "id": 173,
                                "name": "Identifier",
                                "src": "1331:6:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 162,
                                  "type": "address",
                                  "value": "tokenB"
                                },
                                "id": 174,
                                "name": "Identifier",
                                "src": "1341:6:2"
                              }
                            ],
                            "id": 175,
                            "name": "BinaryOperation",
                            "src": "1331:16:2"
                          }
                        ],
                        "id": 176,
                        "name": "FunctionCall",
                        "src": "1323:25:2"
                      }
                    ],
                    "id": 177,
                    "name": "ExpressionStatement",
                    "src": "1323:25:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        179,
                        181
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "token0",
                          "scope": 270,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 178,
                            "name": "ElementaryTypeName",
                            "src": "1359:7:2"
                          }
                        ],
                        "id": 179,
                        "name": "VariableDeclaration",
                        "src": "1359:14:2"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "token1",
                          "scope": 270,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 180,
                            "name": "ElementaryTypeName",
                            "src": "1375:7:2"
                          }
                        ],
                        "id": 181,
                        "name": "VariableDeclaration",
                        "src": "1375:14:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(address,address)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 160,
                                  "type": "address",
                                  "value": "tokenA"
                                },
                                "id": 182,
                                "name": "Identifier",
                                "src": "1393:6:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 162,
                                  "type": "address",
                                  "value": "tokenB"
                                },
                                "id": 183,
                                "name": "Identifier",
                                "src": "1402:6:2"
                              }
                            ],
                            "id": 184,
                            "name": "BinaryOperation",
                            "src": "1393:15:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "tuple(address,address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 160,
                                  "type": "address",
                                  "value": "tokenA"
                                },
                                "id": 185,
                                "name": "Identifier",
                                "src": "1412:6:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 162,
                                  "type": "address",
                                  "value": "tokenB"
                                },
                                "id": 186,
                                "name": "Identifier",
                                "src": "1420:6:2"
                              }
                            ],
                            "id": 187,
                            "name": "TupleExpression",
                            "src": "1411:16:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "tuple(address,address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 162,
                                  "type": "address",
                                  "value": "tokenB"
                                },
                                "id": 188,
                                "name": "Identifier",
                                "src": "1431:6:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 160,
                                  "type": "address",
                                  "value": "tokenA"
                                },
                                "id": 189,
                                "name": "Identifier",
                                "src": "1439:6:2"
                              }
                            ],
                            "id": 190,
                            "name": "TupleExpression",
                            "src": "1430:16:2"
                          }
                        ],
                        "id": 191,
                        "name": "Conditional",
                        "src": "1393:53:2"
                      }
                    ],
                    "id": 192,
                    "name": "VariableDeclarationStatement",
                    "src": "1358:88:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 193,
                            "name": "Identifier",
                            "src": "1456:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 179,
                                  "type": "address",
                                  "value": "token0"
                                },
                                "id": 194,
                                "name": "Identifier",
                                "src": "1464:6:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 195,
                                        "name": "ElementaryTypeName",
                                        "src": "1474:7:2"
                                      }
                                    ],
                                    "id": 196,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1474:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 197,
                                    "name": "Literal",
                                    "src": "1482:1:2"
                                  }
                                ],
                                "id": 198,
                                "name": "FunctionCall",
                                "src": "1474:10:2"
                              }
                            ],
                            "id": 199,
                            "name": "BinaryOperation",
                            "src": "1464:20:2"
                          }
                        ],
                        "id": 200,
                        "name": "FunctionCall",
                        "src": "1456:29:2"
                      }
                    ],
                    "id": 201,
                    "name": "ExpressionStatement",
                    "src": "1456:29:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        203
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "tickSpacing",
                          "scope": 270,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "int24",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "int24",
                              "type": "int24"
                            },
                            "id": 202,
                            "name": "ElementaryTypeName",
                            "src": "1495:5:2"
                          }
                        ],
                        "id": 203,
                        "name": "VariableDeclaration",
                        "src": "1495:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "int24"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 96,
                              "type": "mapping(uint24 => int24)",
                              "value": "feeAmountTickSpacing"
                            },
                            "id": 204,
                            "name": "Identifier",
                            "src": "1515:20:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 164,
                              "type": "uint24",
                              "value": "fee"
                            },
                            "id": 205,
                            "name": "Identifier",
                            "src": "1536:3:2"
                          }
                        ],
                        "id": 206,
                        "name": "IndexAccess",
                        "src": "1515:25:2"
                      }
                    ],
                    "id": 207,
                    "name": "VariableDeclarationStatement",
                    "src": "1495:45:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 208,
                            "name": "Identifier",
                            "src": "1550:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 203,
                                  "type": "int24",
                                  "value": "tickSpacing"
                                },
                                "id": 209,
                                "name": "Identifier",
                                "src": "1558:11:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 210,
                                "name": "Literal",
                                "src": "1573:1:2"
                              }
                            ],
                            "id": 211,
                            "name": "BinaryOperation",
                            "src": "1558:16:2"
                          }
                        ],
                        "id": 212,
                        "name": "FunctionCall",
                        "src": "1550:25:2"
                      }
                    ],
                    "id": 213,
                    "name": "ExpressionStatement",
                    "src": "1550:25:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 214,
                            "name": "Identifier",
                            "src": "1585:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(uint24 => address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "mapping(address => mapping(uint24 => address))"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 106,
                                              "type": "mapping(address => mapping(address => mapping(uint24 => address)))",
                                              "value": "getPool"
                                            },
                                            "id": 215,
                                            "name": "Identifier",
                                            "src": "1593:7:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 179,
                                              "type": "address",
                                              "value": "token0"
                                            },
                                            "id": 216,
                                            "name": "Identifier",
                                            "src": "1601:6:2"
                                          }
                                        ],
                                        "id": 217,
                                        "name": "IndexAccess",
                                        "src": "1593:15:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 181,
                                          "type": "address",
                                          "value": "token1"
                                        },
                                        "id": 218,
                                        "name": "Identifier",
                                        "src": "1609:6:2"
                                      }
                                    ],
                                    "id": 219,
                                    "name": "IndexAccess",
                                    "src": "1593:23:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "uint24",
                                      "value": "fee"
                                    },
                                    "id": 220,
                                    "name": "Identifier",
                                    "src": "1617:3:2"
                                  }
                                ],
                                "id": 221,
                                "name": "IndexAccess",
                                "src": "1593:28:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 222,
                                        "name": "ElementaryTypeName",
                                        "src": "1625:7:2"
                                      }
                                    ],
                                    "id": 223,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1625:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 224,
                                    "name": "Literal",
                                    "src": "1633:1:2"
                                  }
                                ],
                                "id": 225,
                                "name": "FunctionCall",
                                "src": "1625:10:2"
                              }
                            ],
                            "id": 226,
                            "name": "BinaryOperation",
                            "src": "1593:42:2"
                          }
                        ],
                        "id": 227,
                        "name": "FunctionCall",
                        "src": "1585:51:2"
                      }
                    ],
                    "id": 228,
                    "name": "ExpressionStatement",
                    "src": "1585:51:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 170,
                              "type": "address",
                              "value": "pool"
                            },
                            "id": 229,
                            "name": "Identifier",
                            "src": "1646:4:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2897,
                                  "type": "function (address,address,address,uint24,int24) returns (address)",
                                  "value": "deploy"
                                },
                                "id": 230,
                                "name": "Identifier",
                                "src": "1653:6:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapV3Factory_$348",
                                          "typeString": "contract UniswapV3Factory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 231,
                                        "name": "ElementaryTypeName",
                                        "src": "1660:7:2"
                                      }
                                    ],
                                    "id": 232,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1660:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967268,
                                      "type": "contract UniswapV3Factory",
                                      "value": "this"
                                    },
                                    "id": 233,
                                    "name": "Identifier",
                                    "src": "1668:4:2"
                                  }
                                ],
                                "id": 234,
                                "name": "FunctionCall",
                                "src": "1660:13:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 179,
                                  "type": "address",
                                  "value": "token0"
                                },
                                "id": 235,
                                "name": "Identifier",
                                "src": "1675:6:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 181,
                                  "type": "address",
                                  "value": "token1"
                                },
                                "id": 236,
                                "name": "Identifier",
                                "src": "1683:6:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 164,
                                  "type": "uint24",
                                  "value": "fee"
                                },
                                "id": 237,
                                "name": "Identifier",
                                "src": "1691:3:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 203,
                                  "type": "int24",
                                  "value": "tickSpacing"
                                },
                                "id": 238,
                                "name": "Identifier",
                                "src": "1696:11:2"
                              }
                            ],
                            "id": 239,
                            "name": "FunctionCall",
                            "src": "1653:55:2"
                          }
                        ],
                        "id": 240,
                        "name": "Assignment",
                        "src": "1646:62:2"
                      }
                    ],
                    "id": 241,
                    "name": "ExpressionStatement",
                    "src": "1646:62:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(uint24 => address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(address => mapping(uint24 => address))"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 106,
                                          "type": "mapping(address => mapping(address => mapping(uint24 => address)))",
                                          "value": "getPool"
                                        },
                                        "id": 242,
                                        "name": "Identifier",
                                        "src": "1718:7:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 179,
                                          "type": "address",
                                          "value": "token0"
                                        },
                                        "id": 243,
                                        "name": "Identifier",
                                        "src": "1726:6:2"
                                      }
                                    ],
                                    "id": 246,
                                    "name": "IndexAccess",
                                    "src": "1718:15:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 181,
                                      "type": "address",
                                      "value": "token1"
                                    },
                                    "id": 244,
                                    "name": "Identifier",
                                    "src": "1734:6:2"
                                  }
                                ],
                                "id": 247,
                                "name": "IndexAccess",
                                "src": "1718:23:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 164,
                                  "type": "uint24",
                                  "value": "fee"
                                },
                                "id": 245,
                                "name": "Identifier",
                                "src": "1742:3:2"
                              }
                            ],
                            "id": 248,
                            "name": "IndexAccess",
                            "src": "1718:28:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 170,
                              "type": "address",
                              "value": "pool"
                            },
                            "id": 249,
                            "name": "Identifier",
                            "src": "1749:4:2"
                          }
                        ],
                        "id": 250,
                        "name": "Assignment",
                        "src": "1718:35:2"
                      }
                    ],
                    "id": 251,
                    "name": "ExpressionStatement",
                    "src": "1718:35:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(uint24 => address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(address => mapping(uint24 => address))"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 106,
                                          "type": "mapping(address => mapping(address => mapping(uint24 => address)))",
                                          "value": "getPool"
                                        },
                                        "id": 252,
                                        "name": "Identifier",
                                        "src": "1876:7:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 181,
                                          "type": "address",
                                          "value": "token1"
                                        },
                                        "id": 253,
                                        "name": "Identifier",
                                        "src": "1884:6:2"
                                      }
                                    ],
                                    "id": 256,
                                    "name": "IndexAccess",
                                    "src": "1876:15:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 179,
                                      "type": "address",
                                      "value": "token0"
                                    },
                                    "id": 254,
                                    "name": "Identifier",
                                    "src": "1892:6:2"
                                  }
                                ],
                                "id": 257,
                                "name": "IndexAccess",
                                "src": "1876:23:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 164,
                                  "type": "uint24",
                                  "value": "fee"
                                },
                                "id": 255,
                                "name": "Identifier",
                                "src": "1900:3:2"
                              }
                            ],
                            "id": 258,
                            "name": "IndexAccess",
                            "src": "1876:28:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 170,
                              "type": "address",
                              "value": "pool"
                            },
                            "id": 259,
                            "name": "Identifier",
                            "src": "1907:4:2"
                          }
                        ],
                        "id": 260,
                        "name": "Assignment",
                        "src": "1876:35:2"
                      }
                    ],
                    "id": 261,
                    "name": "ExpressionStatement",
                    "src": "1876:35:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2993,
                              "type": "function (address,address,uint24,int24,address)",
                              "value": "PoolCreated"
                            },
                            "id": 262,
                            "name": "Identifier",
                            "src": "1926:11:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 179,
                              "type": "address",
                              "value": "token0"
                            },
                            "id": 263,
                            "name": "Identifier",
                            "src": "1938:6:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 181,
                              "type": "address",
                              "value": "token1"
                            },
                            "id": 264,
                            "name": "Identifier",
                            "src": "1946:6:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 164,
                              "type": "uint24",
                              "value": "fee"
                            },
                            "id": 265,
                            "name": "Identifier",
                            "src": "1954:3:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 203,
                              "type": "int24",
                              "value": "tickSpacing"
                            },
                            "id": 266,
                            "name": "Identifier",
                            "src": "1959:11:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 170,
                              "type": "address",
                              "value": "pool"
                            },
                            "id": 267,
                            "name": "Identifier",
                            "src": "1972:4:2"
                          }
                        ],
                        "id": 268,
                        "name": "FunctionCall",
                        "src": "1926:51:2"
                      }
                    ],
                    "id": 269,
                    "name": "EmitStatement",
                    "src": "1921:56:2"
                  }
                ],
                "id": 270,
                "name": "Block",
                "src": "1313:671:2"
              }
            ],
            "id": 271,
            "name": "FunctionDefinition",
            "src": "1163:821:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                3044
              ],
              "functionSelector": "13af4035",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setOwner",
              "scope": 348,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@inheritdoc IUniswapV3Factory"
                },
                "id": 272,
                "name": "StructuredDocumentation",
                "src": "1990:33:2"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 276,
                "name": "OverrideSpecifier",
                "src": "2071:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_owner",
                      "scope": 295,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 273,
                        "name": "ElementaryTypeName",
                        "src": "2046:7:2"
                      }
                    ],
                    "id": 274,
                    "name": "VariableDeclaration",
                    "src": "2046:14:2"
                  }
                ],
                "id": 275,
                "name": "ParameterList",
                "src": "2045:16:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 277,
                "name": "ParameterList",
                "src": "2080:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 278,
                            "name": "Identifier",
                            "src": "2090:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 279,
                                    "name": "Identifier",
                                    "src": "2098:3:2"
                                  }
                                ],
                                "id": 280,
                                "name": "MemberAccess",
                                "src": "2098:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 90,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 281,
                                "name": "Identifier",
                                "src": "2112:5:2"
                              }
                            ],
                            "id": 282,
                            "name": "BinaryOperation",
                            "src": "2098:19:2"
                          }
                        ],
                        "id": 283,
                        "name": "FunctionCall",
                        "src": "2090:28:2"
                      }
                    ],
                    "id": 284,
                    "name": "ExpressionStatement",
                    "src": "2090:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2980,
                              "type": "function (address,address)",
                              "value": "OwnerChanged"
                            },
                            "id": 285,
                            "name": "Identifier",
                            "src": "2133:12:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 90,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 286,
                            "name": "Identifier",
                            "src": "2146:5:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 274,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 287,
                            "name": "Identifier",
                            "src": "2153:6:2"
                          }
                        ],
                        "id": 288,
                        "name": "FunctionCall",
                        "src": "2133:27:2"
                      }
                    ],
                    "id": 289,
                    "name": "EmitStatement",
                    "src": "2128:32:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 90,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 290,
                            "name": "Identifier",
                            "src": "2170:5:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 274,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 291,
                            "name": "Identifier",
                            "src": "2178:6:2"
                          }
                        ],
                        "id": 292,
                        "name": "Assignment",
                        "src": "2170:14:2"
                      }
                    ],
                    "id": 293,
                    "name": "ExpressionStatement",
                    "src": "2170:14:2"
                  }
                ],
                "id": 294,
                "name": "Block",
                "src": "2080:111:2"
              }
            ],
            "id": 295,
            "name": "FunctionDefinition",
            "src": "2028:163:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                3052
              ],
              "functionSelector": "8a7c195f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "enableFeeAmount",
              "scope": 348,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@inheritdoc IUniswapV3Factory"
                },
                "id": 296,
                "name": "StructuredDocumentation",
                "src": "2197:33:2"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 302,
                "name": "OverrideSpecifier",
                "src": "2298:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "fee",
                      "scope": 347,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint24",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint24",
                          "type": "uint24"
                        },
                        "id": 297,
                        "name": "ElementaryTypeName",
                        "src": "2260:6:2"
                      }
                    ],
                    "id": 298,
                    "name": "VariableDeclaration",
                    "src": "2260:10:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tickSpacing",
                      "scope": 347,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "int24",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "int24",
                          "type": "int24"
                        },
                        "id": 299,
                        "name": "ElementaryTypeName",
                        "src": "2272:5:2"
                      }
                    ],
                    "id": 300,
                    "name": "VariableDeclaration",
                    "src": "2272:17:2"
                  }
                ],
                "id": 301,
                "name": "ParameterList",
                "src": "2259:31:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 303,
                "name": "ParameterList",
                "src": "2307:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 304,
                            "name": "Identifier",
                            "src": "2317:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 305,
                                    "name": "Identifier",
                                    "src": "2325:3:2"
                                  }
                                ],
                                "id": 306,
                                "name": "MemberAccess",
                                "src": "2325:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 90,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 307,
                                "name": "Identifier",
                                "src": "2339:5:2"
                              }
                            ],
                            "id": 308,
                            "name": "BinaryOperation",
                            "src": "2325:19:2"
                          }
                        ],
                        "id": 309,
                        "name": "FunctionCall",
                        "src": "2317:28:2"
                      }
                    ],
                    "id": 310,
                    "name": "ExpressionStatement",
                    "src": "2317:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 311,
                            "name": "Identifier",
                            "src": "2355:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 298,
                                  "type": "uint24",
                                  "value": "fee"
                                },
                                "id": 312,
                                "name": "Identifier",
                                "src": "2363:3:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31303030303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1000000",
                                  "value": "1000000"
                                },
                                "id": 313,
                                "name": "Literal",
                                "src": "2369:7:2"
                              }
                            ],
                            "id": 314,
                            "name": "BinaryOperation",
                            "src": "2363:13:2"
                          }
                        ],
                        "id": 315,
                        "name": "FunctionCall",
                        "src": "2355:22:2"
                      }
                    ],
                    "id": 316,
                    "name": "ExpressionStatement",
                    "src": "2355:22:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 317,
                            "name": "Identifier",
                            "src": "2663:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 300,
                                      "type": "int24",
                                      "value": "tickSpacing"
                                    },
                                    "id": 318,
                                    "name": "Identifier",
                                    "src": "2671:11:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 319,
                                    "name": "Literal",
                                    "src": "2685:1:2"
                                  }
                                ],
                                "id": 320,
                                "name": "BinaryOperation",
                                "src": "2671:15:2"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 300,
                                      "type": "int24",
                                      "value": "tickSpacing"
                                    },
                                    "id": 321,
                                    "name": "Identifier",
                                    "src": "2690:11:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "3136333834",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 16384",
                                      "value": "16384"
                                    },
                                    "id": 322,
                                    "name": "Literal",
                                    "src": "2704:5:2"
                                  }
                                ],
                                "id": 323,
                                "name": "BinaryOperation",
                                "src": "2690:19:2"
                              }
                            ],
                            "id": 324,
                            "name": "BinaryOperation",
                            "src": "2671:38:2"
                          }
                        ],
                        "id": 325,
                        "name": "FunctionCall",
                        "src": "2663:47:2"
                      }
                    ],
                    "id": 326,
                    "name": "ExpressionStatement",
                    "src": "2663:47:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 327,
                            "name": "Identifier",
                            "src": "2720:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "int24"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 96,
                                      "type": "mapping(uint24 => int24)",
                                      "value": "feeAmountTickSpacing"
                                    },
                                    "id": 328,
                                    "name": "Identifier",
                                    "src": "2728:20:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 298,
                                      "type": "uint24",
                                      "value": "fee"
                                    },
                                    "id": 329,
                                    "name": "Identifier",
                                    "src": "2749:3:2"
                                  }
                                ],
                                "id": 330,
                                "name": "IndexAccess",
                                "src": "2728:25:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 331,
                                "name": "Literal",
                                "src": "2757:1:2"
                              }
                            ],
                            "id": 332,
                            "name": "BinaryOperation",
                            "src": "2728:30:2"
                          }
                        ],
                        "id": 333,
                        "name": "FunctionCall",
                        "src": "2720:39:2"
                      }
                    ],
                    "id": 334,
                    "name": "ExpressionStatement",
                    "src": "2720:39:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "int24"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "int24"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 96,
                                  "type": "mapping(uint24 => int24)",
                                  "value": "feeAmountTickSpacing"
                                },
                                "id": 335,
                                "name": "Identifier",
                                "src": "2770:20:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 298,
                                  "type": "uint24",
                                  "value": "fee"
                                },
                                "id": 336,
                                "name": "Identifier",
                                "src": "2791:3:2"
                              }
                            ],
                            "id": 337,
                            "name": "IndexAccess",
                            "src": "2770:25:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 300,
                              "type": "int24",
                              "value": "tickSpacing"
                            },
                            "id": 338,
                            "name": "Identifier",
                            "src": "2798:11:2"
                          }
                        ],
                        "id": 339,
                        "name": "Assignment",
                        "src": "2770:39:2"
                      }
                    ],
                    "id": 340,
                    "name": "ExpressionStatement",
                    "src": "2770:39:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3000,
                              "type": "function (uint24,int24)",
                              "value": "FeeAmountEnabled"
                            },
                            "id": 341,
                            "name": "Identifier",
                            "src": "2824:16:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 298,
                              "type": "uint24",
                              "value": "fee"
                            },
                            "id": 342,
                            "name": "Identifier",
                            "src": "2841:3:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 300,
                              "type": "int24",
                              "value": "tickSpacing"
                            },
                            "id": 343,
                            "name": "Identifier",
                            "src": "2846:11:2"
                          }
                        ],
                        "id": 344,
                        "name": "FunctionCall",
                        "src": "2824:34:2"
                      }
                    ],
                    "id": 345,
                    "name": "EmitStatement",
                    "src": "2819:39:2"
                  }
                ],
                "id": 346,
                "name": "Block",
                "src": "2307:558:2"
              }
            ],
            "id": 347,
            "name": "FunctionDefinition",
            "src": "2235:630:2"
          }
        ],
        "id": 348,
        "name": "ContractDefinition",
        "src": "364:2503:2"
      }
    ],
    "id": 349,
    "name": "SourceUnit",
    "src": "37:2831:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {
        "0xc66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "indexed": true,
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            }
          ],
          "name": "FeeAmountEnabled",
          "type": "event"
        },
        "0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnerChanged",
          "type": "event"
        },
        "0x783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "indexed": false,
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ],
          "name": "PoolCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x84Eb6ef3E7Eb9A127A62166CECADF9B2AbA509Dc",
      "transactionHash": "0x247e2b2b3e19422e88ba2623fcf2f4f46ead6059cdfb5a92732060d684ad5df0"
    },
    "31337": {
      "events": {
        "0xc66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "indexed": true,
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            }
          ],
          "name": "FeeAmountEnabled",
          "type": "event"
        },
        "0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnerChanged",
          "type": "event"
        },
        "0x783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "indexed": false,
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ],
          "name": "PoolCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x84Eb6ef3E7Eb9A127A62166CECADF9B2AbA509Dc",
      "transactionHash": "0x395f87c6672a80015535d798b1bb3cf1c622782317f96fc3952bdd4c80f99bbd"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2023-07-05T18:45:41.488Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createPool(address,address,uint24)": {
        "details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
        "params": {
          "fee": "The desired fee for the pool",
          "tokenA": "One of the two tokens in the desired pool",
          "tokenB": "The other of the two tokens in the desired pool"
        },
        "returns": {
          "pool": "The address of the newly created pool"
        }
      },
      "enableFeeAmount(uint24,int24)": {
        "details": "Fee amounts may never be removed once enabled",
        "params": {
          "fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
          "tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
        }
      },
      "setOwner(address)": {
        "details": "Must be called by the current owner",
        "params": {
          "_owner": "The new owner of the factory"
        }
      }
    },
    "stateVariables": {
      "feeAmountTickSpacing": {
        "details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
        "params": {
          "fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
        },
        "return": "The tick spacing"
      },
      "getPool": {
        "details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
        "params": {
          "fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
          "tokenA": "The contract address of either token0 or token1",
          "tokenB": "The contract address of the other token"
        },
        "return": "pool The pool address"
      },
      "owner": {
        "details": "Can be changed by the current owner via setOwner",
        "return": "The address of the factory owner"
      }
    },
    "title": "Canonical Uniswap V3 factory",
    "version": 1
  },
  "userdoc": {
    "events": {
      "FeeAmountEnabled(uint24,int24)": {
        "notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
      },
      "OwnerChanged(address,address)": {
        "notice": "Emitted when the owner of the factory is changed"
      },
      "PoolCreated(address,address,uint24,int24,address)": {
        "notice": "Emitted when a pool is created"
      }
    },
    "kind": "user",
    "methods": {
      "createPool(address,address,uint24)": {
        "notice": "Creates a pool for the given two tokens and fee"
      },
      "enableFeeAmount(uint24,int24)": {
        "notice": "Enables a fee amount with the given tickSpacing"
      },
      "feeAmountTickSpacing(uint24)": {
        "notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
      },
      "getPool(address,address,uint24)": {
        "notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
      },
      "owner()": {
        "notice": "Returns the current owner of the factory"
      },
      "parameters()": {
        "notice": "Get the parameters to be used in constructing the pool, set transiently during pool creation."
      },
      "setOwner(address)": {
        "notice": "Updates the owner of the factory"
      }
    },
    "notice": "Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees",
    "version": 1
  }
}